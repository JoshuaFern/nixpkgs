Note: dropped changes to '.gitignore'
From 7e27102b6fc6991a6a4eca422b513781a26b1639 Mon Sep 17 00:00:00 2001
From: Alexey Gladkov <gladkov.alexey@gmail.com>
Date: Wed, 21 Aug 2019 13:29:16 +0200
Subject: [PATCH 3/4] libkbdfile: Check compression suffix even if the suffix
 is part of filename

Link: https://github.com/legionus/kbd/issues/32

Signed-off-by: Alexey Gladkov <gladkov.alexey@gmail.com>
---
 src/libkbdfile/kbdfile.c                      |  25 ++++++-----
 src/libkbdfile/kbdfile.h                      |   2 +
 tests/Makefile.am                             |   2 +
 .../test_1/consolefonts/simple-0.psf.gz       | Bin 0 -> 34 bytes
 .../test_1/consolefonts/simple-1.psf.gz       | Bin 0 -> 34 bytes
 .../test_1/consolefonts/simple-2.psf.gz       | Bin 0 -> 34 bytes
 tests/libkbdfile-test13.c                     |  39 ++++++++++++++++++
 8 files changed, 63 insertions(+), 20 deletions(-)
 create mode 100644 tests/findfile/test_1/consolefonts/simple-0.psf.gz
 create mode 100644 tests/findfile/test_1/consolefonts/simple-1.psf.gz
 create mode 100644 tests/findfile/test_1/consolefonts/simple-2.psf.gz
 create mode 100644 tests/libkbdfile-test13.c

diff --git a/src/libkbdfile/kbdfile.c b/src/libkbdfile/kbdfile.c
index fb8e035..487b434 100644
--- a/src/libkbdfile/kbdfile.c
+++ b/src/libkbdfile/kbdfile.c
@@ -344,20 +344,13 @@ StartScan:
 		snprintf(fp->pathname, sizeof(fp->pathname), "%s/%s%s%s", dir, fnam, suf[index], (dc ? dc->ext : ""));
 
 		if (!dc) {
-			fp->flags &= ~KBDFILE_PIPE;
-			fp->fd = fopen(fp->pathname, "r");
+			rc = maybe_pipe_open(fp);
+			goto EndScan;
+		}
 
-			if (!(fp->fd)) {
-				strerror_r(errno, errbuf, sizeof(errbuf));
-				ERR(fp->ctx, "fopen: %s: %s", fp->pathname, errbuf);
-				rc = -1;
-				goto EndScan;
-			}
-		} else {
-			if (pipe_open(dc, fp) < 0) {
-				rc = -1;
-				goto EndScan;
-			}
+		if (pipe_open(dc, fp) < 0) {
+			rc = -1;
+			goto EndScan;
 		}
 	}
 
@@ -457,3 +450,9 @@ kbdfile_open(struct kbdfile_ctx *ctx, const char *filename)
 
 	return fp;
 }
+
+int
+kbdfile_is_compressed(struct kbdfile *fp)
+{
+	return (fp->flags & KBDFILE_PIPE);
+}
diff --git a/src/libkbdfile/kbdfile.h b/src/libkbdfile/kbdfile.h
index 412179a..0318a8e 100644
--- a/src/libkbdfile/kbdfile.h
+++ b/src/libkbdfile/kbdfile.h
@@ -45,6 +45,8 @@ int kbdfile_set_pathname(struct kbdfile *fp, const char *pathname);
 FILE *kbdfile_get_file(struct kbdfile *fp);
 int kbdfile_set_file(struct kbdfile *fp, FILE *x);
 
+int kbdfile_is_compressed(struct kbdfile *fp);
+
 #include <syslog.h>
 
 void
diff --git a/tests/Makefile.am b/tests/Makefile.am
index 8d0ab69..b258552 100644
--- a/tests/Makefile.am
+++ b/tests/Makefile.am
@@ -66,6 +66,7 @@ check_PROGRAMS = \
 	libkbdfile-test10 \
 	libkbdfile-test11 \
 	libkbdfile-test12 \
+	libkbdfile-test13 \
 	libkeymap-test01  \
 	libkeymap-test02  \
 	libkeymap-test03  \
@@ -110,6 +111,7 @@ libkbdfile_test09_SOURCES = libkbdfile-test09.c
 libkbdfile_test10_SOURCES = libkbdfile-test10.c
 libkbdfile_test11_SOURCES = libkbdfile-test11.c
 libkbdfile_test12_SOURCES = libkbdfile-test12.c
+libkbdfile_test13_SOURCES = libkbdfile-test13.c
 
 libkeymap_test01_SOURCES = libkeymap-test01.c
 libkeymap_test02_SOURCES = libkeymap-test02.c
diff --git a/tests/findfile/test_1/consolefonts/simple-0.psf.gz b/tests/findfile/test_1/consolefonts/simple-0.psf.gz
new file mode 100644
index 0000000000000000000000000000000000000000..64b30a5dbda89ea150b142df5cca5aac613dbb72
GIT binary patch
literal 34
icmb2|=HOUg5);e7T%4I(kdvxwpjS|wR?5K400RJ}g9mT`

literal 0
HcmV?d00001

diff --git a/tests/findfile/test_1/consolefonts/simple-1.psf.gz b/tests/findfile/test_1/consolefonts/simple-1.psf.gz
new file mode 100644
index 0000000000000000000000000000000000000000..64b30a5dbda89ea150b142df5cca5aac613dbb72
GIT binary patch
literal 34
icmb2|=HOUg5);e7T%4I(kdvxwpjS|wR?5K400RJ}g9mT`

literal 0
HcmV?d00001

diff --git a/tests/findfile/test_1/consolefonts/simple-2.psf.gz b/tests/findfile/test_1/consolefonts/simple-2.psf.gz
new file mode 100644
index 0000000000000000000000000000000000000000..64b30a5dbda89ea150b142df5cca5aac613dbb72
GIT binary patch
literal 34
icmb2|=HOUg5);e7T%4I(kdvxwpjS|wR?5K400RJ}g9mT`

literal 0
HcmV?d00001

diff --git a/tests/libkbdfile-test13.c b/tests/libkbdfile-test13.c
new file mode 100644
index 0000000..b90adc1
--- /dev/null
+++ b/tests/libkbdfile-test13.c
@@ -0,0 +1,39 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <errno.h>
+
+#include <kbdfile.h>
+#include "libcommon.h"
+
+int
+main(int __attribute__((unused)) argc, char **argv)
+{
+	set_progname(argv[0]);
+
+	struct kbdfile *fp = kbdfile_new(NULL);
+	if (!fp)
+		kbd_error(EXIT_FAILURE, 0, "unable to create kbdfile");
+
+	const char *const dirpath[]  = { "", DATADIR "/findfile/test_1/consolefonts/", 0 };
+	const char *const suffixes[] = { "", ".psfu", ".psf", ".cp", ".fnt", 0 };
+
+	const char *expect = DATADIR "/findfile/test_1/consolefonts/simple-1.psf.gz";
+
+	int rc = 0;
+
+	rc = kbdfile_find((char *)"simple-1.psf.gz", (char **) dirpath, (char **) suffixes, fp);
+
+	if (rc != 0)
+		kbd_error(EXIT_FAILURE, 0, "unable to find file");
+
+	if (strcmp(expect, kbdfile_get_pathname(fp)) != 0)
+		kbd_error(EXIT_FAILURE, 0, "unexpected file: %s (expected %s)", kbdfile_get_pathname(fp), expect);
+
+	if (!kbdfile_is_compressed(fp))
+		kbd_error(EXIT_FAILURE, 0, "not compressed: %s\n", kbdfile_get_pathname(fp));
+
+	kbdfile_free(fp);
+
+	return EXIT_SUCCESS;
+}
-- 
2.23.0


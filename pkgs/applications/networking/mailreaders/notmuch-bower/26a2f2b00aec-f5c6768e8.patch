diff --git a/src/bower.m b/src/bower.m
index cd79794..801f846 100644
--- a/src/bower.m
+++ b/src/bower.m
@@ -20,7 +20,6 @@
 
 :- import_module async.
 :- import_module crypto.
-:- import_module curs.
 :- import_module index_view.
 :- import_module notmuch_config.
 :- import_module prog_config.
@@ -29,6 +28,8 @@
 :- import_module signal.
 :- import_module view_common.
 
+:- use_module curs.
+
 %-----------------------------------------------------------------------------%
 
 :- pragma foreign_decl("C", local,
diff --git a/src/callout.m b/src/callout.m
index 5c49e43..d33f7d3 100644
--- a/src/callout.m
+++ b/src/callout.m
@@ -67,10 +67,11 @@
 :- import_module string.
 
 :- import_module call_system.
-:- import_module curs.
 :- import_module mime_type.
 :- import_module time_util.
 
+:- use_module curs.
+
 %-----------------------------------------------------------------------------%
 
 get_notmuch_config(Config, Key, Res, !IO) :-
diff --git a/src/compose.m b/src/compose.m
index ca35050..cd065b5 100644
--- a/src/compose.m
+++ b/src/compose.m
@@ -75,8 +75,6 @@
 :- import_module call_system.
 :- import_module callout.
 :- import_module color.
-:- import_module curs.
-:- import_module curs.panel.
 :- import_module detect_mime_type.
 :- import_module forward.
 :- import_module gpgme.
@@ -102,6 +100,8 @@
 :- import_module time_util.
 :- import_module write_message.
 
+:- use_module curs.
+
 :- include_module compose.crypto.
 :- import_module compose.crypto.
 
@@ -615,7 +615,7 @@ enter_staging(Config, Screen, Headers0, Text, Attachments, MaybeOldDraft,
     StagingInfo = staging_info(Config, MaybeAccount, Headers, Parsed, Text,
         MaybeOldDraft, init_history),
     AttachInfo = scrollable.init_with_cursor(Attachments),
-    get_cols(Screen, Cols),
+    get_cols(Screen, Cols, !IO),
     setup_pager_for_staging(Config, Cols, Text, new_pager, PagerInfo),
     staging_screen(Screen, StagingInfo, AttachInfo, PagerInfo, Transition,
         !CryptoInfo, !IO).
@@ -727,17 +727,18 @@ staging_screen(Screen, !.StagingInfo, !.AttachInfo, !.PagerInfo, Transition,
     Attrs = compose_attrs(Config),
     PagerAttrs = pager_attrs(Config),
 
-    split_panels(Screen, HeaderPanels, AttachmentPanels, MaybeSepPanel,
+    get_main_panels(Screen, MainPanels, !IO),
+    split_panels(MainPanels, HeaderPanels, AttachmentPanels, MaybeSepPanel,
         PagerPanels),
-    draw_header_lines(HeaderPanels, Attrs, Headers, ParsedHeaders,
+    draw_header_lines(Screen, HeaderPanels, Attrs, Headers, ParsedHeaders,
         MaybeAccount, !.CryptoInfo, !IO),
-    scrollable.draw(draw_attachment_line(Attrs), AttachmentPanels,
+    scrollable.draw(draw_attachment_line(Attrs), Screen, AttachmentPanels,
         !.AttachInfo, !IO),
-    draw_attachments_label(Attrs, AttachmentPanels, !IO),
-    draw_sep_bar(Attrs, Screen, MaybeSepPanel, !IO),
-    draw_pager_lines(PagerAttrs, PagerPanels, !.PagerInfo, !IO),
+    draw_attachments_label(Screen, AttachmentPanels, Attrs, !IO),
+    draw_sep_bar(Screen, MaybeSepPanel, Attrs, !IO),
+    draw_pager_lines(Screen, PagerPanels, PagerAttrs, !.PagerInfo, !IO),
     draw_staging_bar(Attrs, Screen, !.StagingInfo, !IO),
-    panel.update_panels(!IO),
+    update_panels(Screen, !IO),
 
     NumAttachmentRows = list.length(AttachmentPanels),
     NumPagerRows = list.length(PagerPanels),
@@ -770,14 +771,14 @@ staging_screen(Screen, !.StagingInfo, !.AttachInfo, !.PagerInfo, Transition,
         Action = continue
     ;
         ( KeyCode = char('j')
-        ; KeyCode = code(key_down)
+        ; KeyCode = code(curs.key_down)
         )
     ->
         scroll_attachments(Screen, NumAttachmentRows, 1, !AttachInfo, !IO),
         Action = continue
     ;
         ( KeyCode = char('k')
-        ; KeyCode = code(key_up)
+        ; KeyCode = code(curs.key_up)
         )
     ->
         scroll_attachments(Screen, NumAttachmentRows, -1, !AttachInfo, !IO),
@@ -857,7 +858,7 @@ staging_screen(Screen, !.StagingInfo, !.AttachInfo, !.PagerInfo, Transition,
             Message = set_info("Mail not sent."),
             Action = leave(not_sent, Message)
         )
-    ; KeyCode = code(key_resize) ->
+    ; KeyCode = code(curs.key_resize) ->
         Action = resize
     ;
         pager_input(NumPagerRows, KeyCode, _Action, MessageUpdate, !PagerInfo),
@@ -870,9 +871,8 @@ staging_screen(Screen, !.StagingInfo, !.AttachInfo, !.PagerInfo, Transition,
             Transition, !CryptoInfo, !IO)
     ;
         Action = resize,
-        resize_staging_screen(Screen, NewScreen, !.StagingInfo, !PagerInfo,
-            !IO),
-        staging_screen(NewScreen, !.StagingInfo, !.AttachInfo, !.PagerInfo,
+        resize_staging_screen(Screen, !.StagingInfo, !PagerInfo, !IO),
+        staging_screen(Screen, !.StagingInfo, !.AttachInfo, !.PagerInfo,
             Transition, !CryptoInfo, !IO)
     ;
         Action = edit,
@@ -885,14 +885,14 @@ staging_screen(Screen, !.StagingInfo, !.AttachInfo, !.PagerInfo, Transition,
         Transition = screen_transition(Sent, TransitionMessage)
     ).
 
-:- pred resize_staging_screen(screen::in, screen::out, staging_info::in,
+:- pred resize_staging_screen(screen::in, staging_info::in,
     pager_info::in, pager_info::out, io::di, io::uo) is det.
 
-resize_staging_screen(Screen0, Screen, StagingInfo, PagerInfo0, PagerInfo,
-        !IO) :-
-    replace_screen_for_resize(Screen0, Screen, !IO),
-    get_cols(Screen, Cols),
-    split_panels(Screen, _HeaderPanels, _AttachmentPanels, _MaybeSepPanel,
+resize_staging_screen(Screen, StagingInfo, PagerInfo0, PagerInfo, !IO) :-
+    recreate_screen_for_resize(Screen, !IO),
+    get_cols(Screen, Cols, !IO),
+    get_main_panels(Screen, MainPanels, !IO),
+    split_panels(MainPanels, _HeaderPanels, _AttachmentPanels, _MaybeSepPanel,
         PagerPanels),
     NumPagerRows = list.length(PagerPanels),
     Config = StagingInfo ^ si_config,
@@ -1272,12 +1272,11 @@ accept_media_type(String, MimeType) :-
 
 %-----------------------------------------------------------------------------%
 
-:- pred split_panels(screen::in, list(panel)::out, list(panel)::out,
-    maybe(panel)::out, list(panel)::out) is det.
+:- pred split_panels(list(vpanel)::in, list(vpanel)::out, list(vpanel)::out,
+    maybe(vpanel)::out, list(vpanel)::out) is det.
 
-split_panels(Screen, HeaderPanels, AttachmentPanels, MaybeSepPanel,
+split_panels(Panels0, HeaderPanels, AttachmentPanels, MaybeSepPanel,
         PagerPanels) :-
-    get_main_panels(Screen, Panels0),
     list.split_upto(7, Panels0, HeaderPanels, Panels1),
     list.split_upto(3, Panels1, AttachmentPanels, Panels2),
     (
@@ -1289,66 +1288,68 @@ split_panels(Screen, HeaderPanels, AttachmentPanels, MaybeSepPanel,
         PagerPanels = []
     ).
 
-:- pred draw_header_lines(list(panel)::in, compose_attrs::in,
+:- pred draw_header_lines(screen::in, list(vpanel)::in, compose_attrs::in,
     headers::in, parsed_headers::in, maybe(account)::in, crypto_info::in,
     io::di, io::uo) is det.
 
-draw_header_lines(!.Panels, Attrs, Headers, Parsed, Account, CryptoInfo, !IO)
-        :-
+draw_header_lines(Screen, !.Panels, Attrs, Headers, Parsed, Account,
+        CryptoInfo, !IO) :-
     DrawFrom = draw_addresses_and_account(Attrs, show_crypto(yes, yes),
         CryptoInfo, Account),
     DrawRecv = draw_addresses(Attrs, show_crypto(yes, no), CryptoInfo),
     DrawSubj = draw_unstruct(Attrs),
     DrawRepl = draw_addresses(Attrs, show_crypto(no, no), CryptoInfo),
-    hdr(!Panels, Attrs, DrawFrom, "    From", Parsed ^ ph_from, !IO),
-    hdr(!Panels, Attrs, DrawRecv, "      To", Parsed ^ ph_to, !IO),
-    hdr(!Panels, Attrs, DrawRecv, "      Cc", Parsed ^ ph_cc, !IO),
-    hdr(!Panels, Attrs, DrawRecv, "     Bcc", Parsed ^ ph_bcc, !IO),
-    hdr(!Panels, Attrs, DrawSubj, " Subject", Headers ^ h_subject, !IO),
-    hdr(!Panels, Attrs, DrawRepl, "Reply-To", Parsed ^ ph_replyto, !IO),
+    hdr(Screen, !Panels, Attrs, DrawFrom, "    From", Parsed ^ ph_from, !IO),
+    hdr(Screen, !Panels, Attrs, DrawRecv, "      To", Parsed ^ ph_to, !IO),
+    hdr(Screen, !Panels, Attrs, DrawRecv, "      Cc", Parsed ^ ph_cc, !IO),
+    hdr(Screen, !Panels, Attrs, DrawRecv, "     Bcc", Parsed ^ ph_bcc, !IO),
+    hdr(Screen, !Panels, Attrs, DrawSubj, " Subject", Headers ^ h_subject, !IO),
+    hdr(Screen, !Panels, Attrs, DrawRepl, "Reply-To", Parsed ^ ph_replyto, !IO),
     (
         !.Panels = []
     ;
         !.Panels = [CryptoPanel | _],
-        draw_crypto_line(Attrs, CryptoPanel, CryptoInfo, !IO)
+        draw_crypto_line(Attrs, Screen, CryptoPanel, CryptoInfo, !IO)
     ).
 
-:- pred hdr(list(panel), list(panel), compose_attrs,
-    pred(panel, T, io, io), string, T, io, io).
-:- mode hdr(in, out, in,
-    pred(in, in, di, uo) is det, in, in, di, uo) is det.
+:- pred hdr(screen, list(vpanel), list(vpanel), compose_attrs,
+    pred(screen, vpanel, T, io, io), string, T, io, io).
+:- mode hdr(in, in, out, in,
+    pred(in, in, in, di, uo) is det, in, in, di, uo) is det.
 
-hdr(Panels0, Panels, Attrs, DrawValue, FieldName, Value, !IO) :-
+hdr(Screen, Panels0, Panels, Attrs, DrawValue, FieldName, Value, !IO) :-
     (
         Panels0 = [],
         Panels = []
     ;
         Panels0 = [Panel | Panels],
-        panel.erase(Panel, !IO),
-        draw(Panel, Attrs ^ c_generic ^ field_name, FieldName, !IO),
-        draw(Panel, ": ", !IO),
-        DrawValue(Panel, Value, !IO)
+        erase(Screen, Panel, !IO),
+        draw(Screen, Panel, Attrs ^ c_generic ^ field_name, FieldName, !IO),
+        draw(Screen, Panel, ": ", !IO),
+        DrawValue(Screen, Panel, Value, !IO)
     ).
 
-:- pred draw_unstruct(compose_attrs::in, panel::in, header_value::in,
-    io::di, io::uo) is det.
+:- pred draw_unstruct(compose_attrs::in, screen::in, vpanel::in,
+    header_value::in, io::di, io::uo) is det.
 
-draw_unstruct(Attrs, Panel, Value, !IO) :-
+draw_unstruct(Attrs, Screen, Panel, Value, !IO) :-
     String = header_value_string(Value),
-    draw(Panel, Attrs ^ c_generic ^ field_body, String, !IO).
+    draw(Screen, Panel, Attrs ^ c_generic ^ field_body, String, !IO).
 
-:- pred draw_list(pred(panel, T, io, io), panel, attr, list(T), io, io).
-:- mode draw_list(pred(in, in, di, uo) is det, in, in, in, di, uo) is det.
+:- pred draw_list(pred(screen, vpanel, T, io, io),
+    screen, vpanel, curs.attr, list(T), io, io).
+:- mode draw_list(pred(in, in, in, di, uo) is det,
+    in, in, in, in, di, uo) is det.
 
-draw_list(_Pred, _Panel, _Attr, [], !IO).
-draw_list(Pred, Panel, Attr, [H | T], !IO) :-
-    Pred(Panel, H, !IO),
+draw_list(_Pred, _Screen, _Panel, _Attr, [], !IO).
+draw_list(Pred, Screen, Panel, Attr, [H | T], !IO) :-
+    Pred(Screen, Panel, H, !IO),
     (
         T = []
     ;
         T = [_ | _],
-        draw(Panel, Attr, ", ", !IO),
-        draw_list(Pred, Panel, Attr, T, !IO)
+        draw(Screen, Panel, Attr, ", ", !IO),
+        draw_list(Pred, Screen, Panel, Attr, T, !IO)
     ).
 
 :- type show_crypto
@@ -1358,20 +1359,21 @@ draw_list(Pred, Panel, Attr, [H | T], !IO) :-
             ).
 
 :- pred draw_addresses(compose_attrs::in, show_crypto::in, crypto_info::in,
-    panel::in, list(address)::in, io::di, io::uo) is det.
+    screen::in, vpanel::in, list(address)::in, io::di, io::uo) is det.
 
-draw_addresses(Attrs, ShowCrypto, CryptoInfo, Panel, Addresses, !IO) :-
+draw_addresses(Attrs, ShowCrypto, CryptoInfo, Screen, Panel, Addresses, !IO) :-
     Attr = Attrs ^ c_generic ^ field_body,
     draw_list(draw_address(Attrs, ShowCrypto, CryptoInfo),
-        Panel, Attr, Addresses, !IO).
+        Screen, Panel, Attr, Addresses, !IO).
 
 :- pred draw_addresses_and_account(compose_attrs::in, show_crypto::in,
-    crypto_info::in, maybe(account)::in, panel::in, list(address)::in,
-    io::di, io::uo) is det.
+    crypto_info::in, maybe(account)::in, screen::in, vpanel::in,
+    list(address)::in, io::di, io::uo) is det.
 
 draw_addresses_and_account(Attrs, ShowCrypto, CryptoInfo, MaybeAccount,
-        Panel, Addresses, !IO) :-
-    draw_addresses(Attrs, ShowCrypto, CryptoInfo, Panel, Addresses, !IO),
+        Screen, Panel, Addresses, !IO) :-
+    draw_addresses(Attrs, ShowCrypto, CryptoInfo, Screen, Panel, Addresses,
+        !IO),
     Attr = Attrs ^ c_generic ^ field_body,
     (
         MaybeAccount = yes(Account),
@@ -1381,29 +1383,30 @@ draw_addresses_and_account(Attrs, ShowCrypto, CryptoInfo, MaybeAccount,
         MaybeAccount = no,
         AccountString = " (no account)"
     ),
-    draw(Panel, Attr, AccountString, !IO).
+    draw(Screen, Panel, Attr, AccountString, !IO).
 
 :- pred draw_address(compose_attrs::in, show_crypto::in, crypto_info::in,
-    panel::in, address::in, io::di, io::uo) is det.
+    screen::in, vpanel::in, address::in, io::di, io::uo) is det.
 
-draw_address(Attrs, ShowCrypto, CryptoInfo, Panel, Address, !IO) :-
+draw_address(Attrs, ShowCrypto, CryptoInfo, Screen, Panel, Address, !IO) :-
     (
         Address = mailbox(Mailbox),
-        draw_mailbox(Attrs, ShowCrypto, CryptoInfo, Panel, Mailbox, !IO)
+        draw_mailbox(Attrs, ShowCrypto, CryptoInfo, Screen, Panel, Mailbox,
+            !IO)
     ;
         Address = group(DisplayName, Mailboxes),
-        draw_display_name(Attrs, Panel, DisplayName, !IO),
+        draw_display_name(Attrs, Screen, Panel, DisplayName, !IO),
         Attr = Attrs ^ c_generic ^ field_body,
-        draw(Panel, Attr, ": ", !IO),
-        draw_list(draw_mailbox(Attrs, ShowCrypto, CryptoInfo), Panel, Attr,
-            Mailboxes, !IO),
-        draw(Panel, Attr, ";", !IO)
+        draw(Screen, Panel, Attr, ": ", !IO),
+        draw_list(draw_mailbox(Attrs, ShowCrypto, CryptoInfo),
+            Screen, Panel, Attr, Mailboxes, !IO),
+        draw(Screen, Panel, Attr, ";", !IO)
     ).
 
-:- pred draw_display_name(compose_attrs::in, panel::in, display_name::in,
-    io::di, io::uo) is det.
+:- pred draw_display_name(compose_attrs::in, screen::in, vpanel::in,
+    display_name::in, io::di, io::uo) is det.
 
-draw_display_name(Attrs, Panel, DisplayName, !IO) :-
+draw_display_name(Attrs, Screen, Panel, DisplayName, !IO) :-
     display_name_to_string(for_display, DisplayName, String, Valid),
     (
         Valid = yes,
@@ -1412,35 +1415,35 @@ draw_display_name(Attrs, Panel, DisplayName, !IO) :-
         Valid = no,
         Attr = Attrs ^ c_invalid
     ),
-    draw(Panel, Attr, String, !IO).
+    draw(Screen, Panel, Attr, String, !IO).
 
 :- pred draw_mailbox(compose_attrs::in, show_crypto::in, crypto_info::in,
-    panel::in, mailbox::in, io::di, io::uo) is det.
+    screen::in, vpanel::in, mailbox::in, io::di, io::uo) is det.
 
-draw_mailbox(Attrs, ShowCrypto, CryptoInfo, Panel, Mailbox, !IO) :-
+draw_mailbox(Attrs, ShowCrypto, CryptoInfo, Screen, Panel, Mailbox, !IO) :-
     (
         Mailbox = mailbox(yes(DisplayName), AddrSpec),
-        draw_display_name(Attrs, Panel, DisplayName, !IO),
+        draw_display_name(Attrs, Screen, Panel, DisplayName, !IO),
         Attr = Attrs ^ c_generic ^ field_body,
-        draw(Panel, Attr, " <", !IO),
-        draw_addr_spec(Attrs, Panel, AddrSpec, !IO),
-        draw(Panel, Attr, ">", !IO),
-        draw_mailbox_crypto(Attrs, ShowCrypto, CryptoInfo, Panel, AddrSpec,
-            !IO)
+        draw(Screen, Panel, Attr, " <", !IO),
+        draw_addr_spec(Attrs, Screen, Panel, AddrSpec, !IO),
+        draw(Screen, Panel, Attr, ">", !IO),
+        draw_mailbox_crypto(Attrs, ShowCrypto, CryptoInfo, Screen, Panel,
+            AddrSpec, !IO)
     ;
         Mailbox = mailbox(no, AddrSpec),
-        draw_addr_spec(Attrs, Panel, AddrSpec, !IO),
-        draw_mailbox_crypto(Attrs, ShowCrypto, CryptoInfo, Panel, AddrSpec,
-            !IO)
+        draw_addr_spec(Attrs, Screen, Panel, AddrSpec, !IO),
+        draw_mailbox_crypto(Attrs, ShowCrypto, CryptoInfo, Screen, Panel,
+            AddrSpec, !IO)
     ;
         Mailbox = bad_mailbox(String),
-        draw(Panel, Attrs ^ c_invalid, String, !IO)
+        draw(Screen, Panel, Attrs ^ c_invalid, String, !IO)
     ).
 
-:- pred draw_addr_spec(compose_attrs::in, panel::in, addr_spec::in,
-    io::di, io::uo) is det.
+:- pred draw_addr_spec(compose_attrs::in, screen::in, vpanel::in,
+    addr_spec::in, io::di, io::uo) is det.
 
-draw_addr_spec(Attrs, Panel, AddrSpec, !IO) :-
+draw_addr_spec(Attrs, Screen, Panel, AddrSpec, !IO) :-
     addr_spec_to_string(AddrSpec, String, Valid),
     (
         Valid = yes,
@@ -1449,12 +1452,14 @@ draw_addr_spec(Attrs, Panel, AddrSpec, !IO) :-
         Valid = no,
         Attr = Attrs ^ c_invalid
     ),
-    draw(Panel, Attr, String, !IO).
+    draw(Screen, Panel, Attr, String, !IO).
 
 :- pred draw_mailbox_crypto(compose_attrs::in, show_crypto::in,
-    crypto_info::in, panel::in, addr_spec::in, io::di, io::uo) is det.
+    crypto_info::in, screen::in, vpanel::in, addr_spec::in, io::di, io::uo)
+    is det.
 
-draw_mailbox_crypto(Attrs, ShowCrypto, CryptoInfo, Panel, AddrSpec, !IO) :-
+draw_mailbox_crypto(Attrs, ShowCrypto, CryptoInfo, Screen, Panel, AddrSpec,
+        !IO) :-
     ShowCrypto = show_crypto(ShowEncryptKey, ShowSignKey),
     CryptoInfo = crypto_info(_, Encrypt, EncryptKeys, Sign, SignKeys),
     E = Encrypt `and` ShowEncryptKey,
@@ -1493,10 +1498,10 @@ draw_mailbox_crypto(Attrs, ShowCrypto, CryptoInfo, Panel, AddrSpec, !IO) :-
     ),
     ( combine(DrawE, DrawS) ->
         % Combine E: S:
-        draw_key(Attrs, Panel, PrefixE ++ PrefixS, DrawE, !IO)
+        draw_key(Attrs, Screen, Panel, PrefixE ++ PrefixS, DrawE, !IO)
     ;
-        draw_key(Attrs, Panel, PrefixE, DrawE, !IO),
-        draw_key(Attrs, Panel, PrefixS, DrawS, !IO)
+        draw_key(Attrs, Screen, Panel, PrefixE, DrawE, !IO),
+        draw_key(Attrs, Screen, Panel, PrefixS, DrawS, !IO)
     ).
 
 :- type draw_key
@@ -1511,11 +1516,11 @@ combine(X, Y) :-
     Y = found(key_userid(KeyY, UserId)),
     get_key_info(KeyX) = get_key_info(KeyY).
 
-:- pred draw_key(compose_attrs::in, panel::in, string::in, draw_key::in,
-    io::di, io::uo) is det.
+:- pred draw_key(compose_attrs::in, screen::in, vpanel::in, string::in,
+    draw_key::in, io::di, io::uo) is det.
 
-draw_key(_Attrs, _Panel, _Prefix, none, !IO).
-draw_key(Attrs, Panel, Prefix, found(key_userid(Key, UserId)), !IO) :-
+draw_key(_Attrs, _Screen, _Panel, _Prefix, none, !IO).
+draw_key(Attrs, Screen, Panel, Prefix, found(key_userid(Key, UserId)), !IO) :-
     KeyInfo = get_key_info(Key),
     SubKeys = KeyInfo ^ key_subkeys,
     ( SubKeys = [SubKey | _] ->
@@ -1528,25 +1533,25 @@ draw_key(Attrs, Panel, Prefix, found(key_userid(Key, UserId)), !IO) :-
             Text = format(" [%s: %s, validity: %s]",
                 [s(Prefix), s(Fpr), s(Validity)])
         ),
-        draw(Panel, Attr, Text, !IO)
+        draw(Screen, Panel, Attr, Text, !IO)
     ;
         % Should not happen. 
-        draw(Panel, Attrs ^ c_generic ^ good_key, " [no subkey]", !IO)
+        draw(Screen, Panel, Attrs ^ c_generic ^ good_key, " [no subkey]", !IO)
     ).
-draw_key(Attrs, Panel, Prefix, not_found, !IO) :-
+draw_key(Attrs, Screen, Panel, Prefix, not_found, !IO) :-
     ( Prefix = "" ->
         Text = " [no key found]"
     ;
         Text = format(" [%s: no key found]", [s(Prefix)])
     ),
-    draw(Panel, Attrs ^ c_generic ^ bad_key, Text, !IO).
+    draw(Screen, Panel, Attrs ^ c_generic ^ bad_key, Text, !IO).
 
 :- func short_fpr(string) = string.
 
 short_fpr(Fpr) = string.right_by_codepoint(Fpr, 8).
 
-:- pred validity_attr(compose_attrs::in, validity::in, string::out, attr::out)
-    is det.
+:- pred validity_attr(compose_attrs::in, validity::in, string::out,
+    curs.attr::out) is det.
 
 validity_attr(Attrs, Validity, String, Attr) :-
     validity(Validity, String, GoodKey),
@@ -1567,10 +1572,10 @@ validity(validity_marginal, "marginal", yes).
 validity(validity_full, "full", yes).
 validity(validity_ultimate, "ultimate", yes).
 
-:- pred draw_crypto_line(compose_attrs::in, panel::in, crypto_info::in,
-    io::di, io::uo) is det.
+:- pred draw_crypto_line(compose_attrs::in, screen::in, vpanel::in,
+    crypto_info::in, io::di, io::uo) is det.
 
-draw_crypto_line(Attrs, Panel, CryptoInfo, !IO) :-
+draw_crypto_line(Attrs, Screen, Panel, CryptoInfo, !IO) :-
     CryptoInfo ^ ci_encrypt = Encrypt,
     CryptoInfo ^ ci_sign = Sign,
     (
@@ -1590,14 +1595,15 @@ draw_crypto_line(Attrs, Panel, CryptoInfo, !IO) :-
         Sign = no,
         Body = "none"
     ),
-    panel.erase(Panel, !IO),
-    draw(Panel, Attrs ^ c_generic ^ field_name, "  Crypto: ", !IO),
-    draw(Panel, Attrs ^ c_generic ^ field_body, Body, !IO).
+    erase(Screen, Panel, !IO),
+    draw(Screen, Panel, Attrs ^ c_generic ^ field_name, "  Crypto: ", !IO),
+    draw(Screen, Panel, Attrs ^ c_generic ^ field_body, Body, !IO).
 
-:- pred draw_attachment_line(compose_attrs::in, panel::in, attachment::in,
-    int::in, bool::in, io::di, io::uo) is det.
+:- pred draw_attachment_line(compose_attrs::in, screen::in, vpanel::in,
+    attachment::in, int::in, bool::in, io::di, io::uo) is det.
 
-draw_attachment_line(Attrs, Panel, Attachment, LineNr, IsCursor, !IO) :-
+draw_attachment_line(Attrs, Screen, Panel, Attachment, LineNr, IsCursor, !IO)
+        :-
     (
         Attachment = old_attachment(Part),
         Part = part(_MessageId, _PartId, ContentType, MaybeContentDisposition,
@@ -1614,20 +1620,20 @@ draw_attachment_line(Attrs, Panel, Attachment, LineNr, IsCursor, !IO) :-
         MaybeContentDisposition = no,
         MaybeContentLength = yes(content_length(Size))
     ),
-    panel.erase(Panel, !IO),
-    panel.move(Panel, 0, 10, !IO),
+    erase(Screen, Panel, !IO),
+    move(Screen, Panel, 0, 10, !IO),
     Attr = Attrs ^ c_generic ^ field_body,
-    draw(Panel, Attr, format("%d. ", [i(LineNr + 1)]), !IO),
+    draw(Screen, Panel, Attr, format("%d. ", [i(LineNr + 1)]), !IO),
     (
         IsCursor = yes,
-        FilenameAttr = Attr + reverse
+        FilenameAttr = curs.(Attr + curs.reverse)
     ;
         IsCursor = no,
         FilenameAttr = Attr
     ),
-    draw(Panel, FilenameAttr, Filename, !IO),
-    draw(Panel, Attr, " (", !IO),
-    draw(Panel, Attr, mime_type.to_string(ContentType), !IO),
+    draw(Screen, Panel, FilenameAttr, Filename, !IO),
+    draw(Screen, Panel, Attr, " (", !IO),
+    draw(Screen, Panel, Attr, mime_type.to_string(ContentType), !IO),
     /*
     (
         MaybeContentCharset = yes(content_charset(Charset)),
@@ -1640,49 +1646,48 @@ draw_attachment_line(Attrs, Panel, Attachment, LineNr, IsCursor, !IO) :-
         MaybeContentDisposition = yes(content_disposition(Disposition)),
         Disposition \= "attachment"
     ->
-        draw(Panel, Attr, "; " ++ Disposition, !IO)
+        draw(Screen, Panel, Attr, "; " ++ Disposition, !IO)
     ;
         true
     ),
-    draw(Panel, Attr, ")", !IO),
+    draw(Screen, Panel, Attr, ")", !IO),
     (
         MaybeContentLength = yes(content_length(Length)),
         % This is the encoded size.
-        draw2(Panel, " ", format_approx_length(Length), !IO)
+        draw2(Screen, Panel, " ", format_approx_length(Length), !IO)
     ;
         MaybeContentLength = no
     ).
 
-:- pred draw_attachments_label(compose_attrs::in, list(panel)::in,
+:- pred draw_attachments_label(screen::in, list(vpanel)::in, compose_attrs::in,
     io::di, io::uo) is det.
 
-draw_attachments_label(_Attrs, [], !IO).
-draw_attachments_label(Attrs, [Panel | _], !IO) :-
-    panel.move(Panel, 0, 0, !IO),
-    draw(Panel, Attrs ^ c_generic ^ field_name, "  Attach: ", !IO).
+draw_attachments_label(_Screen, [], _Attrs, !IO).
+draw_attachments_label(Screen, [Panel | _], Attrs, !IO) :-
+    move(Screen, Panel, 0, 0, !IO),
+    draw(Screen, Panel, Attrs ^ c_generic ^ field_name, "  Attach: ", !IO).
 
-:- pred draw_sep_bar(compose_attrs::in, screen::in, maybe(panel)::in,
+:- pred draw_sep_bar(screen::in, maybe(vpanel)::in, compose_attrs::in,
     io::di, io::uo) is det.
 
-draw_sep_bar(_, _, no, !IO).
-draw_sep_bar(Attrs, Screen, yes(Panel), !IO) :-
-    Attr = Attrs ^ c_status ^ bar,
-    get_cols(Screen, Cols),
-    panel.erase(Panel, !IO),
-    draw(Panel, Attr,
+draw_sep_bar(_, no, _, !IO).
+draw_sep_bar(Screen, yes(Panel), Attrs, !IO) :-
+    get_cols(Screen, Cols, !IO),
+    erase(Screen, Panel, !IO),
+    draw(Screen, Panel, Attrs ^ c_status ^ bar,
         "-- (ftcbsr) edit fields; (E)ncrypt, (S)ign; " ++
         "(a)ttach, (d)etach, media (T)ype ", !IO),
-    hline(Panel, char.to_int('-'), Cols, !IO).
+    hline(Screen, Panel, '-', Cols, !IO).
 
 :- pred draw_staging_bar(compose_attrs::in, screen::in, staging_info::in,
     io::di, io::uo) is det.
 
 draw_staging_bar(Attrs, Screen, StagingInfo, !IO) :-
     MaybeOldDraft = StagingInfo ^ si_old_msgid,
-    get_cols(Screen, Cols),
-    get_bar_panel(Screen, Panel),
-    panel.erase(Panel, !IO),
-    draw(Panel, Attrs ^ c_status ^ bar, "-- ", !IO),
+    get_cols(Screen, Cols, !IO),
+    Panel = bar_panel,
+    erase(Screen, Panel, !IO),
+    draw(Screen, Panel, Attrs ^ c_status ^ bar, "-- ", !IO),
     (
         MaybeOldDraft = yes(_),
         Msg = "Compose: (e) edit, (p) postpone, (Y) send, " ++
@@ -1691,7 +1696,7 @@ draw_staging_bar(Attrs, Screen, StagingInfo, !IO) :-
         MaybeOldDraft = no,
         Msg = "Compose: (e) edit, (p) postpone, (Y) send, (Q) abandon."
     ),
-    draw_fixed(Panel, Cols - 3, Msg, '-', !IO).
+    draw_fixed(Screen, Panel, Cols - 3, Msg, '-', !IO).
 
 %-----------------------------------------------------------------------------%
 
diff --git a/src/index_view.m b/src/index_view.m
index 7378c4f..2a79cfc 100644
--- a/src/index_view.m
+++ b/src/index_view.m
@@ -41,8 +41,6 @@
 :- import_module color.
 :- import_module compose.
 :- import_module cord_util.
-:- import_module curs.
-:- import_module curs.panel.
 :- import_module data.
 :- import_module pipe_to.
 :- import_module poll_notify.
@@ -57,6 +55,8 @@
 :- import_module time_util.
 :- import_module view_async.
 
+:- use_module curs.
+
 %-----------------------------------------------------------------------------%
 
 :- type index_info
@@ -73,6 +73,7 @@
                 i_internal_search   :: maybe(string),
                 i_internal_search_dir :: search_direction,
                 i_show_authors      :: show_authors,
+                i_show_square_brackets :: show_square_brackets,
                 i_common_history    :: common_history
             ).
 
@@ -98,6 +99,10 @@
     --->    show_authors
     ;       hide_authors.
 
+:- type show_square_brackets
+    --->    show_square_brackets
+    ;       hide_square_brackets.
+
 :- type binding
     --->    scroll_down
     ;       scroll_up
@@ -129,6 +134,7 @@
     ;       bulk_tag(keep_selection)
     ;       pipe_thread_id
     ;       toggle_show_authors
+    ;       toggle_show_square_brackets
     ;       quit.
 
 :- type action
@@ -212,7 +218,7 @@ open_index(Config, NotmuchConfig, Crypto, Screen, SearchString,
     MaybeSearch = no,
     IndexInfo = index_info(Config, Crypto, Scrollable, SearchString,
         SearchTokens, SearchTime, NextPollTime, PollCount, MaybeSearch,
-        dir_forward, show_authors, !.CommonHistory),
+        dir_forward, show_authors, show_square_brackets, !.CommonHistory),
     index_loop(Screen, redraw, IndexInfo, !IO).
 
 :- pred search_terms_with_progress(prog_config::in, screen::in,
@@ -316,14 +322,15 @@ index_loop(Screen, OnEntry, !.IndexInfo, !IO) :-
         OnEntry = redraw,
         draw_index_view(Screen, !.IndexInfo, !IO),
         draw_index_bar(Screen, !.IndexInfo, !IO),
-        panel.update_panels(!IO)
+        update_panels(Screen, !IO)
     ;
         OnEntry = no_draw
     ),
 
     poll_async_with_progress(Screen, handle_poll_result, !IndexInfo, !IO),
     get_keycode_async_aware(!.IndexInfo ^ i_next_poll_time, KeyCode, !IO),
-    index_view_input(Screen, KeyCode, MessageUpdate, Action, !IndexInfo),
+    get_main_rows(Screen, NumMainRows, !IO),
+    index_view_input(NumMainRows, KeyCode, MessageUpdate, Action, !IndexInfo),
     update_message(Screen, MessageUpdate, !IO),
 
     (
@@ -336,9 +343,9 @@ index_loop(Screen, OnEntry, !.IndexInfo, !IO) :-
         index_loop(Screen, no_draw, !.IndexInfo, !IO)
     ;
         Action = resize,
-        replace_screen_for_resize(Screen, NewScreen, !IO),
-        recreate_screen(NewScreen, !IndexInfo),
-        index_loop(NewScreen, redraw, !.IndexInfo, !IO)
+        recreate_screen_for_resize(Screen, !IO),
+        recreate_index_view(Screen, !IndexInfo, !IO),
+        index_loop(Screen, redraw, !.IndexInfo, !IO)
     ;
         Action = open_pager(ThreadId, IncludeTags),
         flush_async_with_progress(Screen, !IO),
@@ -358,11 +365,11 @@ index_loop(Screen, OnEntry, !.IndexInfo, !IO) :-
         open_thread_pager(Config, Crypto, Screen, ThreadId, IncludeTags,
             IndexPollTerms, MaybeSearch, Transition,
             CommonHistory0, CommonHistory, !IO),
-        handle_screen_transition(Screen, NewScreen, Transition,
-            TagUpdates, !IndexInfo, !IO),
+        handle_screen_transition(Screen, Transition, TagUpdates,
+            !IndexInfo, !IO),
         effect_thread_pager_changes(TagUpdates, !IndexInfo, !IO),
         !IndexInfo ^ i_common_history := CommonHistory,
-        index_loop(NewScreen, redraw, !.IndexInfo, !IO)
+        index_loop(Screen, redraw, !.IndexInfo, !IO)
     ;
         Action = enter_limit(MaybeInitial),
         Config = !.IndexInfo ^ i_config,
@@ -427,38 +434,36 @@ index_loop(Screen, OnEntry, !.IndexInfo, !IO) :-
         CommonHistory1 = CommonHistory0 ^ ch_to_history := ToHistory,
         CommonHistory = CommonHistory1 ^ ch_subject_history := SubjectHistory,
         !IndexInfo ^ i_common_history := CommonHistory,
-        handle_screen_transition(Screen, NewScreen, Transition, Sent,
-            !IndexInfo, !IO),
+        handle_screen_transition(Screen, Transition, Sent, !IndexInfo, !IO),
         (
             Sent = sent,
-            refresh_all(NewScreen, quiet, !IndexInfo, !IO)
+            refresh_all(Screen, quiet, !IndexInfo, !IO)
         ;
             Sent = not_sent
         ),
-        index_loop(NewScreen, redraw, !.IndexInfo, !IO)
+        index_loop(Screen, redraw, !.IndexInfo, !IO)
     ;
         Action = start_reply(ReplyKind),
         flush_async_with_progress(Screen, !IO),
-        start_reply(Screen, NewScreen, ReplyKind, MaybeRefresh,
-            !IndexInfo, !IO),
+        start_reply(Screen, ReplyKind, MaybeRefresh, !IndexInfo, !IO),
         (
             MaybeRefresh = yes(ThreadId),
-            refresh_index_line(NewScreen, ThreadId, !IndexInfo, !IO)
+            refresh_index_line(Screen, ThreadId, !IndexInfo, !IO)
         ;
             MaybeRefresh = no
         ),
-        index_loop(NewScreen, redraw, !.IndexInfo, !IO)
+        index_loop(Screen, redraw, !.IndexInfo, !IO)
     ;
         Action = start_recall,
         flush_async_with_progress(Screen, !IO),
-        handle_recall(Screen, NewScreen, Sent, !IndexInfo, !IO),
+        handle_recall(Screen, Sent, !IndexInfo, !IO),
         (
             Sent = sent,
-            refresh_all(NewScreen, quiet, !IndexInfo, !IO)
+            refresh_all(Screen, quiet, !IndexInfo, !IO)
         ;
             Sent = not_sent
         ),
-        index_loop(NewScreen, redraw, !.IndexInfo, !IO)
+        index_loop(Screen, redraw, !.IndexInfo, !IO)
     ;
         Action = addressbook_add,
         addressbook_add(Screen, !.IndexInfo, !IO),
@@ -514,56 +519,52 @@ index_loop(Screen, OnEntry, !.IndexInfo, !IO) :-
 
 %-----------------------------------------------------------------------------%
 
-:- pred index_view_input(screen::in, keycode::in, message_update::out,
+:- pred index_view_input(int::in, keycode::in, message_update::out,
     action::out, index_info::in, index_info::out) is det.
 
-index_view_input(Screen, KeyCode, MessageUpdate, Action, !IndexInfo) :-
+index_view_input(NumRows, KeyCode, MessageUpdate, Action, !IndexInfo) :-
     ( key_binding(KeyCode, Binding) ->
         (
             Binding = scroll_down,
-            move_cursor(Screen, 1, MessageUpdate, !IndexInfo),
+            move_cursor(NumRows, 1, MessageUpdate, !IndexInfo),
             Action = continue
         ;
             Binding = scroll_up,
-            move_cursor(Screen, -1, MessageUpdate, !IndexInfo),
+            move_cursor(NumRows, -1, MessageUpdate, !IndexInfo),
             Action = continue
         ;
             Binding = page_down,
-            get_main_rows(Screen, NumRows),
-            move_cursor(Screen, NumRows - 1, MessageUpdate, !IndexInfo),
+            move_cursor(NumRows, NumRows - 1, MessageUpdate, !IndexInfo),
             Action = continue
         ;
             Binding = page_up,
-            get_main_rows(Screen, NumRows),
-            move_cursor(Screen, -NumRows + 1, MessageUpdate, !IndexInfo),
+            move_cursor(NumRows, -NumRows + 1, MessageUpdate, !IndexInfo),
             Action = continue
         ;
             Binding = half_page_down,
-            get_main_rows(Screen, NumRows),
             Delta = int.max(15, NumRows / 2),
-            move_cursor(Screen, Delta, MessageUpdate, !IndexInfo),
+            move_cursor(NumRows, Delta, MessageUpdate, !IndexInfo),
             Action = continue
         ;
             Binding = half_page_up,
-            get_main_rows(Screen, NumRows),
             Delta = int.max(15, NumRows / 2),
-            move_cursor(Screen, -Delta, MessageUpdate, !IndexInfo),
+            move_cursor(NumRows, -Delta, MessageUpdate, !IndexInfo),
             Action = continue
         ;
             Binding = home,
             Scrollable0 = !.IndexInfo ^ i_scrollable,
             NumLines = get_num_lines(Scrollable0),
-            move_cursor(Screen, -NumLines, MessageUpdate, !IndexInfo),
+            move_cursor(NumRows, -NumLines, MessageUpdate, !IndexInfo),
             Action = continue
         ;
             Binding = end,
             Scrollable0 = !.IndexInfo ^ i_scrollable,
             NumLines = get_num_lines(Scrollable0),
-            move_cursor(Screen, NumLines, MessageUpdate, !IndexInfo),
+            move_cursor(NumRows, NumLines, MessageUpdate, !IndexInfo),
             Action = continue
         ;
             Binding = skip_to_unread,
-            skip_to_unread(Screen, MessageUpdate, !IndexInfo),
+            skip_to_unread(NumRows, MessageUpdate, !IndexInfo),
             Action = continue
         ;
             Binding = enter,
@@ -603,7 +604,7 @@ index_view_input(Screen, KeyCode, MessageUpdate, Action, !IndexInfo) :-
             Action = prompt_internal_search(SearchDir)
         ;
             Binding = skip_to_internal_search,
-            skip_to_internal_search(Screen, MessageUpdate, !IndexInfo),
+            skip_to_internal_search(NumRows, MessageUpdate, !IndexInfo),
             Action = continue
         ;
             Binding = toggle_unread,
@@ -631,7 +632,7 @@ index_view_input(Screen, KeyCode, MessageUpdate, Action, !IndexInfo) :-
             Action = prompt_tag(Initial)
         ;
             Binding = toggle_select,
-            toggle_select(Screen, MessageUpdate, !IndexInfo),
+            toggle_select(NumRows, MessageUpdate, !IndexInfo),
             Action = continue
         ;
             Binding = unselect_all,
@@ -649,13 +650,17 @@ index_view_input(Screen, KeyCode, MessageUpdate, Action, !IndexInfo) :-
             Binding = toggle_show_authors,
             toggle_show_authors(MessageUpdate, !IndexInfo),
             Action = continue
+        ;
+            Binding = toggle_show_square_brackets,
+            toggle_show_square_brackets(MessageUpdate, !IndexInfo),
+            Action = continue
         ;
             Binding = quit,
             MessageUpdate = no_change,
             Action = quit
         )
     ;
-        ( KeyCode = code(key_resize) ->
+        ( KeyCode = code(curs.key_resize) ->
             Action = resize
         ; KeyCode = timeout_or_error ->
             Action = continue_no_draw
@@ -670,17 +675,17 @@ index_view_input(Screen, KeyCode, MessageUpdate, Action, !IndexInfo) :-
 key_binding(char(Char), Binding) :-
     key_binding_char(Char, Binding).
 key_binding(code(Code), Binding) :-
-    ( Code = key_up ->
+    ( Code = curs.key_up ->
         Binding = scroll_up
-    ; Code = key_down ->
+    ; Code = curs.key_down ->
         Binding = scroll_down
-    ; Code = key_home ->
+    ; Code = curs.key_home ->
         Binding = home
-    ; Code = key_end ->
+    ; Code = curs.key_end ->
         Binding = end
-    ; Code = key_pageup ->
+    ; Code = curs.key_pageup ->
         Binding = page_up
-    ; Code = key_pagedown ->
+    ; Code = curs.key_pagedown ->
         Binding = page_down
     ;
         fail
@@ -722,16 +727,15 @@ key_binding_char('''', bulk_tag(clear_selection)).
 key_binding_char('"', bulk_tag(keep_selection)).
 key_binding_char('|', pipe_thread_id).
 key_binding_char('z', toggle_show_authors).
+key_binding_char('}', toggle_show_square_brackets).
 key_binding_char('q', quit).
-key_binding_char('z', toggle_author).
 
-:- pred move_cursor(screen::in, int::in, message_update::out,
+:- pred move_cursor(int::in, int::in, message_update::out,
     index_info::in, index_info::out) is det.
 
-move_cursor(Screen, Delta, MessageUpdate, !Info) :-
+move_cursor(MainRows, Delta, MessageUpdate, !Info) :-
     Scrollable0 = !.Info ^ i_scrollable,
-    get_main_rows(Screen, NumRows),
-    move_cursor(NumRows, Delta, HitLimit, Scrollable0, Scrollable),
+    move_cursor(MainRows, Delta, HitLimit, Scrollable0, Scrollable),
     !Info ^ i_scrollable := Scrollable,
     (
         HitLimit = no,
@@ -745,12 +749,11 @@ move_cursor(Screen, Delta, MessageUpdate, !Info) :-
         )
     ).
 
-:- pred skip_to_unread(screen::in, message_update::out,
+:- pred skip_to_unread(int::in, message_update::out,
     index_info::in, index_info::out) is det.
 
-skip_to_unread(Screen, MessageUpdate, !Info) :-
+skip_to_unread(NumRows, MessageUpdate, !Info) :-
     Scrollable0 = !.Info ^ i_scrollable,
-    get_main_rows(Screen, NumRows),
     ( get_cursor(Scrollable0, Cursor0) ->
         (
             search_forward(is_unread_line, Scrollable0, Cursor0 + 1, Cursor, _)
@@ -813,15 +816,14 @@ effect_thread_pager_changes(Effects, !Info, !IO) :-
 
 %-----------------------------------------------------------------------------%
 
-:- pred start_reply(screen::in, screen::out, reply_kind::in,
-    maybe(thread_id)::out, index_info::in, index_info::out, io::di, io::uo)
-    is det.
+:- pred start_reply(screen::in, reply_kind::in, maybe(thread_id)::out,
+    index_info::in, index_info::out, io::di, io::uo) is det.
 
-start_reply(!Screen, ReplyKind, MaybeRefresh, !Info, !IO) :-
+start_reply(Screen, ReplyKind, MaybeRefresh, !Info, !IO) :-
     Scrollable = !.Info ^ i_scrollable,
     ( get_cursor_line(Scrollable, _, CursorLine) ->
         ThreadId = CursorLine ^ i_id,
-        try_reply(!Screen, ThreadId, no, ReplyKind, TryResA, !Info, !IO),
+        try_reply(Screen, ThreadId, no, ReplyKind, TryResA, !Info, !IO),
         (
             TryResA = ok(sent),
             MaybeRefresh = yes(ThreadId)
@@ -830,7 +832,7 @@ start_reply(!Screen, ReplyKind, MaybeRefresh, !Info, !IO) :-
             MaybeRefresh = no
         ;
             TryResA = unable_to_choose,
-            try_reply(!Screen, ThreadId, yes, ReplyKind, TryResB, !Info, !IO),
+            try_reply(Screen, ThreadId, yes, ReplyKind, TryResB, !Info, !IO),
             (
                 TryResB = ok(sent),
                 MaybeRefresh = yes(ThreadId)
@@ -840,7 +842,7 @@ start_reply(!Screen, ReplyKind, MaybeRefresh, !Info, !IO) :-
             ;
                 TryResB = unable_to_choose,
                 Msg = "Unable to choose message to reply to.",
-                update_message(!.Screen, set_warning(Msg), !IO),
+                update_message(Screen, set_warning(Msg), !IO),
                 MaybeRefresh = no
             ;
                 TryResB = error,
@@ -851,15 +853,15 @@ start_reply(!Screen, ReplyKind, MaybeRefresh, !Info, !IO) :-
             MaybeRefresh = no
         )
     ;
-        update_message(!.Screen, set_warning("No thread."), !IO),
+        update_message(Screen, set_warning("No thread."), !IO),
         MaybeRefresh = no
     ).
 
-:- pred try_reply(screen::in, screen::out, thread_id::in, bool::in,
-    reply_kind::in, try_reply_result::out, index_info::in, index_info::out,
-    io::di, io::uo) is det.
+:- pred try_reply(screen::in, thread_id::in, bool::in, reply_kind::in,
+    try_reply_result::out, index_info::in, index_info::out, io::di, io::uo)
+    is det.
 
-try_reply(!Screen, ThreadId, RequireUnread, ReplyKind, Res, !Info, !IO) :-
+try_reply(Screen, ThreadId, RequireUnread, ReplyKind, Res, !Info, !IO) :-
     (
         RequireUnread = yes,
         Args0 = ["tag:unread"]
@@ -883,37 +885,37 @@ try_reply(!Screen, ThreadId, RequireUnread, ReplyKind, Res, !Info, !IO) :-
     (
         ListRes = ok(MessageIds),
         ( MessageIds = [MessageId] ->
-            start_reply_to_message_id(Config, Crypto, !.Screen, MessageId,
+            start_reply_to_message_id(Config, Crypto, Screen, MessageId,
                 ReplyKind, Transition, !IO),
-            handle_screen_transition(!Screen, Transition, Sent, !Info, !IO),
+            handle_screen_transition(Screen, Transition, Sent, !Info, !IO),
             Res = ok(Sent)
         ;
             Res = unable_to_choose
         )
     ;
         ListRes = error(Error),
-        update_message(!.Screen, set_warning(Error), !IO),
+        update_message(Screen, set_warning(Error), !IO),
         Res = error
     ).
 
 %-----------------------------------------------------------------------------%
 
-:- pred handle_recall(screen::in, screen::out, sent::out,
-    index_info::in, index_info::out, io::di, io::uo) is det.
+:- pred handle_recall(screen::in, sent::out, index_info::in, index_info::out,
+    io::di, io::uo) is det.
 
-handle_recall(!Screen, Sent, !IndexInfo, !IO) :-
+handle_recall(Screen, Sent, !IndexInfo, !IO) :-
     Config = !.IndexInfo ^ i_config,
     Crypto = !.IndexInfo ^ i_crypto,
-    select_recall(Config, !.Screen, no, TransitionA, !IO),
-    handle_screen_transition(!Screen, TransitionA, MaybeSelected,
+    select_recall(Config, Screen, no, TransitionA, !IO),
+    handle_screen_transition(Screen, TransitionA, MaybeSelected,
         !IndexInfo, !IO),
     (
         MaybeSelected = yes(Message),
         (
             Message = message(_, _, _, _, _, _),
-            continue_from_message(Config, Crypto, !.Screen, postponed_message,
+            continue_from_message(Config, Crypto, Screen, postponed_message,
                 Message, TransitionB, !IO),
-            handle_screen_transition(!Screen, TransitionB, Sent, !IndexInfo,
+            handle_screen_transition(Screen, TransitionB, Sent, !IndexInfo,
                 !IO)
         ;
             Message = excluded_message(_, _, _, _, _),
@@ -980,24 +982,24 @@ prompt_internal_search(Screen, SearchDir, !Info, !IO) :-
             !Info ^ i_internal_search := yes(Search),
             !Info ^ i_internal_search_dir := SearchDir,
             !Info ^ i_common_history ^ ch_internal_search_history := History,
-            skip_to_internal_search(Screen, MessageUpdate, !Info),
+            get_main_rows(Screen, NumRows, !IO),
+            skip_to_internal_search(NumRows, MessageUpdate, !Info),
             update_message(Screen, MessageUpdate, !IO)
         )
     ;
         Return = no
     ).
 
-:- pred skip_to_internal_search(screen::in, message_update::out,
+:- pred skip_to_internal_search(int::in, message_update::out,
     index_info::in, index_info::out) is det.
 
-skip_to_internal_search(Screen, MessageUpdate, !Info) :-
+skip_to_internal_search(NumRows, MessageUpdate, !Info) :-
     MaybeSearch = !.Info ^ i_internal_search,
     (
         MaybeSearch = yes(Search),
         SearchDir = !.Info ^ i_internal_search_dir,
         Scrollable0 = !.Info ^ i_scrollable,
         ( get_cursor(Scrollable0, Cursor0) ->
-            get_main_rows(Screen, NumRows),
             (
                 SearchDir = dir_forward,
                 Start = Cursor0 + 1,
@@ -1075,7 +1077,8 @@ modify_tag_cursor_line(ModifyPred, Screen, !Info, !IO) :-
             async_tag_threads(Config, TagDeltas, [ThreadId], !IO),
             set_cursor_line(CursorLine, Scrollable0, Scrollable),
             !Info ^ i_scrollable := Scrollable,
-            move_cursor(Screen, 1, _MessageUpdate, !Info),
+            get_main_rows(Screen, NumRows, !IO),
+            move_cursor(NumRows, 1, _MessageUpdate, !Info),
             MessageUpdate = clear_message
         ;
             MessageUpdate = set_warning("Refusing to tag multiple messages.")
@@ -1253,10 +1256,10 @@ apply_tag_changes(CursorLine0, TagDeltas, AddTags, RemoveTags, !Info, !IO) :-
 
 %-----------------------------------------------------------------------------%
 
-:- pred toggle_select(screen::in, message_update::out,
+:- pred toggle_select(int::in, message_update::out,
     index_info::in, index_info::out) is det.
 
-toggle_select(Screen, MessageUpdate, !Info) :-
+toggle_select(NumRows, MessageUpdate, !Info) :-
     Scrollable0 = !.Info ^ i_scrollable,
     ( get_cursor_line(Scrollable0, _Cursor0, CursorLine0) ->
         Selected0 = CursorLine0 ^ i_selected,
@@ -1270,7 +1273,7 @@ toggle_select(Screen, MessageUpdate, !Info) :-
         CursorLine = CursorLine0 ^ i_selected := Selected,
         set_cursor_line(CursorLine, Scrollable0, Scrollable),
         !Info ^ i_scrollable := Scrollable,
-        move_cursor(Screen, 1, MessageUpdate, !Info)
+        move_cursor(NumRows, 1, MessageUpdate, !Info)
     ;
         MessageUpdate = set_warning("No thread.")
     ).
@@ -1625,6 +1628,26 @@ toggle_show_authors(MessageUpdate, !Info) :-
 
 %-----------------------------------------------------------------------------%
 
+:- pred toggle_show_square_brackets(message_update::out,
+    index_info::in, index_info::out) is det.
+
+toggle_show_square_brackets(MessageUpdate, !Info) :-
+    ShowBrackets0 = !.Info ^ i_show_square_brackets,
+    (
+        ShowBrackets0 = show_square_brackets,
+        MessageUpdate = set_info("Hiding brackets in subject."),
+        ShowBrackets = hide_square_brackets
+    ;
+        ShowBrackets0 = hide_square_brackets,
+        MessageUpdate = set_info("Showing brackets in subject."),
+        ShowBrackets = show_square_brackets
+    ),
+    !Info ^ i_show_square_brackets := ShowBrackets.
+
+%-----------------------------------------------------------------------------%
+
+%-----------------------------------------------------------------------------%
+
 :- pred refresh_all(screen::in, verbosity::in, index_info::in, index_info::out,
     io::di, io::uo) is det.
 
@@ -1677,7 +1700,7 @@ refresh_all_2(Screen, Time, Tokens, Threads, !Info, !IO) :-
                 search_forward(line_matches_thread_id(ThreadId0),
                     !.Scrollable, 0, Cursor, _)
             ->
-                get_main_rows(Screen, NumRows),
+                get_main_rows(Screen, NumRows, !IO),
                 set_cursor_visible(Cursor, NumRows, !Scrollable)
             ;
                 true
@@ -1733,33 +1756,27 @@ replace_index_cursor_line(Nowish, Thread, !Info, !IO) :-
 
 %-----------------------------------------------------------------------------%
 
-:- pred recreate_screen(screen::in, index_info::in, index_info::out) is det.
+:- pred recreate_index_view(screen::in, index_info::in, index_info::out,
+    io::di, io::uo) is det.
 
-recreate_screen(Screen, !IndexInfo) :-
+recreate_index_view(Screen, !IndexInfo, !IO) :-
     % Keep cursor visible.
     Scrollable0 = !.IndexInfo ^ i_scrollable,
     ( get_cursor(Scrollable0, Cursor) ->
-        get_main_rows(Screen, NumRows),
+        get_main_rows(Screen, NumRows, !IO),
         set_cursor_visible(Cursor, NumRows, Scrollable0, Scrollable),
         !IndexInfo ^ i_scrollable := Scrollable
     ;
         true
     ).
 
-:- pred handle_screen_transition(screen::in, screen::out,
-    screen_transition(T)::in, T::out, index_info::in, index_info::out,
-    io::di, io::uo) is det.
+:- pred handle_screen_transition(screen::in, screen_transition(T)::in, T::out,
+    index_info::in, index_info::out, io::di, io::uo) is det.
 
-handle_screen_transition(!Screen, Transition, T, !Info, !IO) :-
+handle_screen_transition(Screen, Transition, T, !Info, !IO) :-
     Transition = screen_transition(T, MessageUpdate),
-    fast_forward_screen(!Screen, Resized, !IO),
-    (
-        Resized = yes,
-        recreate_screen(!.Screen, !Info)
-    ;
-        Resized = no
-    ),
-    update_message(!.Screen, MessageUpdate, !IO).
+    recreate_index_view(Screen, !Info, !IO),    % in case of resize
+    update_message(Screen, MessageUpdate, !IO).
 
 %-----------------------------------------------------------------------------%
 
@@ -1818,7 +1835,7 @@ handle_poll_result(Screen, CountOutput, !Info, !IO) :-
             !Info ^ i_poll_count := Count,
             % Redraw the bar immediately.
             draw_index_bar(Screen, !.Info, !IO),
-            panel.update_panels(!IO),
+            update_panels(Screen, !IO),
 
             % Run notify command if any.
             ( Count > 0 ->
@@ -1857,33 +1874,59 @@ draw_index_view(Screen, Info, !IO) :-
     ShowAuthors = Info ^ i_show_authors,
     (
         ShowAuthors = show_authors,
-        get_cols(Screen, Cols),
+        get_cols(Screen, Cols, !IO),
         get_author_width(Cols, AuthorWidth)
     ;
         ShowAuthors = hide_authors,
         AuthorWidth = 0
     ),
-    get_main_panels(Screen, MainPanels),
+    get_main_panels(Screen, MainPanels, !IO),
     Scrollable = Info ^ i_scrollable,
-    scrollable.draw(draw_index_line(Attrs, AuthorWidth), MainPanels,
+    scrollable.draw(draw_index_line(Attrs, AuthorWidth, Info ^ i_show_square_brackets), Screen, MainPanels,
         Scrollable, !IO).
 
-:- pred get_author_width(int::in, authorvisible::in, int::out) is det.
+:- pred get_author_width(int::in, int::out) is det.
 
-get_author_width(Cols, AuthorVisible, AuthorWidth) :-
+get_author_width(Cols, AuthorWidth) :-
     Rem = Cols - 16 - 40,
-    ( AuthorVisible = showing_author, Rem >= 4 ->
-        AuthorWidth = min(Rem, 20)
-    ;
+    ( Rem < 4 ->
         AuthorWidth = 0
+    ;
+        AuthorWidth = min(Rem, 20)
     ).
 
-:- pred draw_index_line(index_attrs::in, int::in, panel::in,
+:- pred not_rbracket(char::in) is semidet.
+
+not_rbracket(C) :-
+  C \= (']').
+
+
+:- pred filter_subject(string::in, show_square_brackets::in, string::out) is det.
+
+filter_subject(Subj, Show, O) :-
+  ( Show = show_square_brackets,
+    O = Subj% no change
+  ; Show = hide_square_brackets,
+   ( string.prefix(Subj, "["),
+     string.contains_char(Subj, ']') ->
+     % string.remove_prefix("[", Subj, After),
+     After = string.remove_prefix_if_present("[", Subj),
+     string.right(After, string.suffix_length(not_rbracket, After), Keep),
+     O = Keep
+     ;
+     O = Subj
+   )
+  )
+ .
+
+:- pred draw_index_line(index_attrs::in, int::in, show_square_brackets::in, screen::in, vpanel::in,
     index_line::in, int::in, bool::in, io::di, io::uo) is det.
 
-draw_index_line(IAttrs, AuthorWidth, Panel, Line, _LineNr, IsCursor, !IO) :-
-    Line = index_line(_Id, Selected, Date, Authors, Subject, Tags, StdTags,
+draw_index_line(IAttrs, AuthorWidth, ShowBrackets, Screen, Panel, Line, _LineNr, IsCursor,
+        !IO) :-
+    Line = index_line(_Id, Selected, Date, Authors, OrigSubject, Tags, StdTags,
         NonstdTagsWidth, Matched, Total),
+    filter_subject(OrigSubject, ShowBrackets, Subject),
     Attrs = IAttrs ^ i_generic,
     (
         IsCursor = yes,
@@ -1892,58 +1935,59 @@ draw_index_line(IAttrs, AuthorWidth, Panel, Line, _LineNr, IsCursor, !IO) :-
         IsCursor = no,
         DateAttr = Attrs ^ relative_date
     ),
-    draw_fixed(Panel, DateAttr, 10, Date, ' ', !IO),
+    draw_fixed(Screen, Panel, DateAttr, 10, Date, ' ', !IO),
 
     (
         Selected = selected,
-        mattr_draw(Panel, unless(IsCursor, Attrs ^ selected), "*", !IO)
+        mattr_draw(Screen, Panel, unless(IsCursor, Attrs ^ selected), "*", !IO)
     ;
         Selected = not_selected,
-        draw(Panel, " ", !IO)
+        draw(Screen, Panel, " ", !IO)
     ),
-    mattr(Panel, unless(IsCursor, Attrs ^ standard_tag), !IO),
+    mattr(Screen, Panel, unless(IsCursor, Attrs ^ standard_tag), !IO),
 
     StdTags = standard_tags(Unread, Replied, Deleted, Flagged, Inboxed),
     (
         Unread = unread,
-        Base = bold,
-        draw(Panel, "n", !IO)
+        Base = curs.bold,
+        draw(Screen, Panel, "n", !IO)
     ;
         Unread = read,
-        Base = normal,
-        draw(Panel, " ", !IO)
+        Base = curs.normal,
+        draw(Screen, Panel, " ", !IO)
     ),
     (
         Replied = replied,
-        draw(Panel, "r", !IO)
+        draw(Screen, Panel, "r", !IO)
     ;
         Replied = not_replied,
-        draw(Panel, " ", !IO)
+        draw(Screen, Panel, " ", !IO)
     ),
     (
         Deleted = deleted,
-        draw(Panel, "d", !IO)
+        draw(Screen, Panel, "d", !IO)
     ;
         Deleted = not_deleted,
-        draw(Panel, " ", !IO)
+        draw(Screen, Panel, " ", !IO)
     ),
     (
         Inboxed = inboxed,
-        draw(Panel, "i", !IO)
+        draw(Screen, Panel, "i", !IO)
     ;
         Inboxed = not_inboxed,
-        draw(Panel, " ", !IO)
+        draw(Screen, Panel, " ", !IO)
     ),
     (
         Flagged = flagged,
-        mattr_draw(Panel, unless(IsCursor, Attrs ^ flagged), "! ", !IO)
+        mattr_draw(Screen, Panel, unless(IsCursor, Attrs ^ flagged), "! ", !IO)
     ;
         Flagged = unflagged,
-        draw(Panel, "  ", !IO)
+        draw(Screen, Panel, "  ", !IO)
     ),
 
     ( AuthorWidth > 0 ->
-        mattr_draw_fixed(Panel, unless(IsCursor, Attrs ^ author + Base),
+        mattr_draw_fixed(Screen, Panel,
+            unless(IsCursor, curs.(Attrs ^ author + Base)),
             AuthorWidth, Authors, ' ', !IO)
     ;
         true
@@ -1956,38 +2000,41 @@ draw_index_line(IAttrs, AuthorWidth, Panel, Line, _LineNr, IsCursor, !IO) :-
         CountStr = format(" %3d", [i(Matched)]),
         TotalStr = format("/%-3d ", [i(Total)])
     ),
-    mattr_draw(Panel, unless(IsCursor, IAttrs ^ i_count), CountStr, !IO),
-    mattr_draw(Panel, unless(IsCursor, IAttrs ^ i_total), TotalStr, !IO),
+    mattr_draw(Screen, Panel, unless(IsCursor, IAttrs ^ i_count), CountStr,
+        !IO),
+    mattr_draw(Screen, Panel, unless(IsCursor, IAttrs ^ i_total), TotalStr,
+        !IO),
 
-    panel.getyx(Panel, Row, SubjectX0, !IO),
-    mattr_draw(Panel, unless(IsCursor, Attrs ^ subject), Subject, !IO),
+    getyx(Screen, Panel, Row, SubjectX0, !IO),
+    mattr_draw(Screen, Panel, unless(IsCursor, Attrs ^ subject), Subject, !IO),
 
     % Draw non-standard tags, overlapping up to half of the subject.
     ( NonstdTagsWidth > 0 ->
-        panel.getyx(Panel, _, SubjectX, !IO),
-        panel.getmaxyx(Panel, _, MaxX, !IO),
+        getyx(Screen, Panel, _, SubjectX, !IO),
+        getmaxyx(Screen, Panel, _, MaxX, !IO),
         (
             MaxX - SubjectX < NonstdTagsWidth,
             SubjectMidX = (MaxX + SubjectX0)/2,
             MoveX = max(SubjectMidX, MaxX - NonstdTagsWidth),
             MoveX < SubjectX
         ->
-            panel.move(Panel, Row, MoveX, !IO)
+            move(Screen, Panel, Row, MoveX, !IO)
         ;
             true
         ),
-        attr(Panel, Attrs ^ other_tag, !IO),
-        set.fold(draw_display_tag(Panel), Tags, !IO)
+        attr(Screen, Panel, Attrs ^ other_tag, !IO),
+        set.fold(draw_display_tag(Screen, Panel), Tags, !IO)
     ;
         true
     ).
 
-:- pred draw_display_tag(panel::in, tag::in, io::di, io::uo) is det.
+:- pred draw_display_tag(screen::in, vpanel::in, tag::in, io::di, io::uo)
+    is det.
 
-draw_display_tag(Panel, Tag, !IO) :-
+draw_display_tag(Screen, Panel, Tag, !IO) :-
     ( display_tag(Tag) ->
         display_tag_string(Tag, S),
-        draw2(Panel, " ", S, !IO)
+        draw2(Screen, Panel, " ", S, !IO)
     ;
         true
     ).
@@ -2008,7 +2055,7 @@ draw_index_bar(Screen, Info, !IO) :-
 count_messages_since_refresh(Count) =
     string.format("%+d messages since refresh", [i(Count)]).
 
-:- func unless(bool, attr) = maybe(attr).
+:- func unless(bool, curs.attr) = maybe(curs.attr).
 
 unless(no, X) = yes(X).
 unless(yes, _) = no.
diff --git a/src/pager.m b/src/pager.m
index a7d0ad2..da2d193 100644
--- a/src/pager.m
+++ b/src/pager.m
@@ -9,8 +9,6 @@
 :- import_module maybe.
 
 :- import_module color.
-:- import_module curs.
-:- import_module curs.panel.
 :- import_module data.
 :- import_module prog_config.
 :- import_module screen.
@@ -103,8 +101,8 @@
 :- pred get_percent_visible(pager_info::in, int::in, message_id::in, int::out)
     is semidet.
 
-:- pred draw_pager_lines(pager_attrs::in, list(panel)::in, pager_info::in,
-    io::di, io::uo) is det.
+:- pred draw_pager_lines(screen::in, list(vpanel)::in, pager_attrs::in,
+    pager_info::in, io::di, io::uo) is det.
 
 %-----------------------------------------------------------------------------%
 %-----------------------------------------------------------------------------%
@@ -133,6 +131,8 @@
 :- import_module string_util.
 :- import_module time_util.
 
+:- use_module curs.
+
 %-----------------------------------------------------------------------------%
 
 :- type pager_info
@@ -877,17 +877,17 @@ key_binding(KeyCode, Binding) :-
         char_binding(Char, Binding)
     ;
         KeyCode = code(Code),
-        ( Code = key_down ->
+        ( Code = curs.key_down ->
             Binding = scroll_down
-        ; Code = key_up ->
+        ; Code = curs.key_up ->
             Binding = scroll_up
-        ; Code = key_pagedown ->
+        ; Code = curs.key_pagedown ->
             Binding = page_down
-        ; Code = key_pageup ->
+        ; Code = curs.key_pageup ->
             Binding = page_up
-        ; Code = key_home ->
+        ; Code = curs.key_home ->
             Binding = home
-        ; Code = key_end ->
+        ; Code = curs.key_end ->
             Binding = end
         ;
             fail
@@ -1593,20 +1593,21 @@ get_percent_visible(Info, NumPagerRows, MessageId, Percent) :-
 
 %-----------------------------------------------------------------------------%
 
-draw_pager_lines(Attrs, Panels, Info, !IO) :-
+draw_pager_lines(Screen, Panels, Attrs, Info, !IO) :-
     Scrollable = Info ^ p_scrollable,
-    scrollable.draw(draw_id_pager_line(Attrs), Panels, Scrollable, !IO).
+    scrollable.draw(draw_id_pager_line(Attrs), Screen, Panels, Scrollable,
+        !IO).
 
-:- pred draw_id_pager_line(pager_attrs::in, panel::in, id_pager_line::in,
-    int::in, bool::in, io::di, io::uo) is det.
+:- pred draw_id_pager_line(pager_attrs::in, screen::in, vpanel::in,
+    id_pager_line::in, int::in, bool::in, io::di, io::uo) is det.
 
-draw_id_pager_line(Attrs, Panel, _Id - Line, _LineNr, IsCursor, !IO) :-
-    draw_pager_line(Attrs, Panel, Line, IsCursor, !IO).
+draw_id_pager_line(Attrs, Screen, Panel, _Id - Line, _LineNr, IsCursor, !IO) :-
+    draw_pager_line(Attrs, Screen, Panel, Line, IsCursor, !IO).
 
-:- pred draw_pager_line(pager_attrs::in, panel::in, pager_line::in, bool::in,
-    io::di, io::uo) is det.
+:- pred draw_pager_line(pager_attrs::in, screen::in, vpanel::in,
+    pager_line::in, bool::in, io::di, io::uo) is det.
 
-draw_pager_line(Attrs, Panel, Line, IsCursor, !IO) :-
+draw_pager_line(Attrs, Screen, Panel, Line, IsCursor, !IO) :-
     GAttrs = Attrs ^ p_generic,
     (
         (
@@ -1615,59 +1616,64 @@ draw_pager_line(Attrs, Panel, Line, IsCursor, !IO) :-
         ;
             Line = subseq_message_header(Continue, Name, Value)
         ),
-        attr(Panel, GAttrs ^ field_name, !IO),
+        attr(Screen, Panel, GAttrs ^ field_name, !IO),
         (
             Continue = no,
-            draw(Panel, Name, !IO),
-            draw(Panel, ": ", !IO)
+            draw(Screen, Panel, Name, !IO),
+            draw(Screen, Panel, ": ", !IO)
         ;
             Continue = yes,
-            getyx(Panel, Y, X, !IO),
-            move(Panel, Y, X + string_wcwidth(Name) + 2, !IO)
+            getyx(Screen, Panel, Y, X, !IO),
+            move(Screen, Panel, Y, X + string_wcwidth(Name) + 2, !IO)
         ),
         BodyAttr = GAttrs ^ field_body,
         (
             IsCursor = yes,
-            Highlight = reverse
+            Highlight = curs.reverse
         ;
             IsCursor = no,
             ( Name = "Subject" ->
-                Highlight = bold
+                Highlight = curs.bold
             ;
-                Highlight = normal
+                Highlight = curs.normal
             )
         ),
-        draw(Panel, BodyAttr + Highlight, Value, !IO)
+        draw(Screen, Panel, curs.(BodyAttr + Highlight), Value, !IO)
     ;
         Line = text(pager_text(QuoteLevel, Text, QuoteMarkerEnd, TextType)),
         Attr0 = quote_level_to_attr(Attrs, QuoteLevel),
         (
             IsCursor = yes,
-            Attr1 = reverse
+            Attr1 = curs.reverse
         ;
             IsCursor = no,
-            Attr1 = normal
+            Attr1 = curs.normal
         ),
         (
             TextType = plain,
-            draw(Panel, Attr0 + Attr1, Text, !IO)
+            draw(Screen, Panel, curs.(Attr0 + Attr1), Text, !IO)
         ;
             TextType = diff(DiffLine),
             DiffAttr = diff_line_to_attr(Attrs, DiffLine),
             ( QuoteMarkerEnd = 0 ->
-                draw(Panel, DiffAttr + Attr1, Text, !IO)
+                draw(Screen, Panel, curs.(DiffAttr + Attr1), Text, !IO)
             ;
                 End = string.length(Text),
-                draw(Panel, Attr0 + Attr1, Text, 0, QuoteMarkerEnd, !IO),
-                draw(Panel, DiffAttr + Attr1, Text, QuoteMarkerEnd, End, !IO)
+                draw(Screen, Panel, curs.(Attr0 + Attr1),
+                    Text, 0, QuoteMarkerEnd, !IO),
+                draw(Screen, Panel, curs.(DiffAttr + Attr1),
+                    Text, QuoteMarkerEnd, End, !IO)
             )
         ;
             TextType = url(UrlStart, UrlEnd),
             UrlAttr = Attrs ^ p_url,
             End = string.length(Text),
-            draw(Panel, Attr0 + Attr1, Text, 0, UrlStart, !IO),
-            draw(Panel, UrlAttr + Attr1, Text, UrlStart, UrlEnd, !IO),
-            draw(Panel, Attr0 + Attr1, Text, UrlEnd, End, !IO)
+            draw(Screen, Panel, curs.(Attr0 + Attr1),
+                Text, 0, UrlStart, !IO),
+            draw(Screen, Panel, curs.(UrlAttr + Attr1),
+                Text, UrlStart, UrlEnd, !IO),
+            draw(Screen, Panel, curs.(Attr0 + Attr1),
+                Text, UrlEnd, End, !IO)
         )
     ;
         Line = part_head(Part, HiddenParts, Expanded, Importance),
@@ -1683,32 +1689,32 @@ draw_pager_line(Attrs, Panel, Line, IsCursor, !IO) :-
         ),
         (
             IsCursor = yes,
-            Attr = Attr0 + reverse
+            Attr = curs.(Attr0 + curs.reverse)
         ;
             IsCursor = no,
             Attr = Attr0
         ),
-        draw(Panel, Attr, "[-- ", !IO),
-        draw(Panel, mime_type.to_string(ContentType), !IO),
+        draw(Screen, Panel, Attr, "[-- ", !IO),
+        draw(Screen, Panel, mime_type.to_string(ContentType), !IO),
         (
             MaybeFilename = yes(filename(Filename)),
-            draw(Panel, "; ", !IO),
-            draw(Panel, Filename, !IO)
+            draw(Screen, Panel, "; ", !IO),
+            draw(Screen, Panel, Filename, !IO)
         ;
             MaybeFilename = no
         ),
         /*
         (
             MaybeContentDisposition = yes(content_disposition(Disposition)),
-            draw(Panel, "; ", !IO),
-            draw(Panel, Disposition, !IO)
+            draw(Screen, Panel, "; ", !IO),
+            draw(Screen, Panel, Disposition, !IO)
         ;
             MaybeContentDisposition = no
         ),
         (
             MaybeContentCharset = yes(content_charset(Charset)),
-            draw(Panel, "; charset=", !IO),
-            draw(Panel, Charset, !IO)
+            draw(Screen, Panel, "; charset=", !IO),
+            draw(Screen, Panel, Charset, !IO)
         ;
             MaybeContentCharset = no
         ),
@@ -1720,16 +1726,16 @@ draw_pager_line(Attrs, Panel, Line, IsCursor, !IO) :-
             ;
                 DecodedLength = Length
             ),
-            draw(Panel, " (", !IO),
-            draw(Panel, format_approx_length(DecodedLength), !IO),
-            draw(Panel, ")", !IO)
+            draw(Screen, Panel, " (", !IO),
+            draw(Screen, Panel, format_approx_length(DecodedLength), !IO),
+            draw(Screen, Panel, ")", !IO)
         ;
             MaybeContentLength = no
         ),
-        draw(Panel, " --]", !IO),
+        draw(Screen, Panel, " --]", !IO),
         ( make_part_message(Part, HiddenParts, Expanded, Message) ->
-            attr(Panel, Attrs ^ p_part_message, !IO),
-            draw2(Panel, "  ", Message, !IO)
+            attr(Screen, Panel, Attrs ^ p_part_message, !IO),
+            draw2(Screen, Panel, "  ", Message, !IO)
         ;
             true
         )
@@ -1737,12 +1743,12 @@ draw_pager_line(Attrs, Panel, Line, IsCursor, !IO) :-
         Line = fold_marker(_, _),
         (
             IsCursor = yes,
-            Attr = Attrs ^ p_fold + reverse
+            Attr = curs.(Attrs ^ p_fold + curs.reverse)
         ;
             IsCursor = no,
             Attr = Attrs ^ p_fold
         ),
-        draw(Panel, Attr, "...", !IO)
+        draw(Screen, Panel, Attr, "...", !IO)
     ;
         Line = signature(signature(Status, Errors)),
         BodyAttr = GAttrs ^ field_body,
@@ -1750,37 +1756,37 @@ draw_pager_line(Attrs, Panel, Line, IsCursor, !IO) :-
         BadAttr = GAttrs ^ bad_key,
         (
             Status = none,
-            draw(Panel, BadAttr, " ─• No signature ", !IO)
+            draw(Screen, Panel, BadAttr, " ─• No signature ", !IO)
         ;
             Status = good(MaybeFingerprint, _MaybeCreated, MaybeExpires,
                 MaybeUserId),
-            draw(Panel, GoodAttr, " ─• Good signature ", !IO),
+            draw(Screen, Panel, GoodAttr, " ─• Good signature ", !IO),
             (
                 MaybeUserId = yes(UserId),
-                draw(Panel, BodyAttr, lstrip(UserId), !IO),
+                draw(Screen, Panel, BodyAttr, lstrip(UserId), !IO),
                 (
                     MaybeFingerprint = yes(Fingerprint),
-                    draw(Panel, BodyAttr, ", fpr ", !IO),
-                    draw(Panel, BodyAttr, Fingerprint, !IO)
+                    draw(Screen, Panel, BodyAttr, ", fpr ", !IO),
+                    draw(Screen, Panel, BodyAttr, Fingerprint, !IO)
                 ;
                     MaybeFingerprint = no
                 )
             ;
                 MaybeUserId = no,
                 MaybeFingerprint = yes(Fingerprint),
-                draw(Panel, BodyAttr, "fingerprint ", !IO),
-                draw(Panel, BodyAttr, Fingerprint, !IO)
+                draw(Screen, Panel, BodyAttr, "fingerprint ", !IO),
+                draw(Screen, Panel, BodyAttr, Fingerprint, !IO)
             ;
                 MaybeUserId = no,
                 MaybeFingerprint = no,
-                draw(Panel, BodyAttr, "(no user id)", !IO)
+                draw(Screen, Panel, BodyAttr, "(no user id)", !IO)
             ),
             % Not really tested; don't know when it occurs.
             (
                 MaybeExpires = yes(Expires),
                 localtime(Expires, TM, !IO),
-                draw(Panel, BodyAttr, "; expires ", !IO),
-                draw(Panel, BodyAttr, asctime(TM), !IO)
+                draw(Screen, Panel, BodyAttr, "; expires ", !IO),
+                draw(Screen, Panel, BodyAttr, asctime(TM), !IO)
             ;
                 MaybeExpires = no
             )
@@ -1796,28 +1802,29 @@ draw_pager_line(Attrs, Panel, Line, IsCursor, !IO) :-
                 BadStatus = unknown,
                 BadMessage = " ─• Problem verifying signature "
             ),
-            draw(Panel, BadAttr, BadMessage, !IO),
+            draw(Screen, Panel, BadAttr, BadMessage, !IO),
             (
                 MaybeKeyId = yes(KeyId),
-                draw(Panel, BodyAttr, "key id ", !IO),
-                draw(Panel, BodyAttr, KeyId, !IO)
+                draw(Screen, Panel, BodyAttr, "key id ", !IO),
+                draw(Screen, Panel, BodyAttr, KeyId, !IO)
             ;
                 MaybeKeyId = no,
-                draw(Panel, BodyAttr, "(no key id)", !IO)
+                draw(Screen, Panel, BodyAttr, "(no key id)", !IO)
             )
         ),
         ( Errors > 0 ->
-            draw(Panel, BodyAttr, format(" (errors: %d)", [i(Errors)]), !IO)
+            draw(Screen, Panel, BodyAttr, format(" (errors: %d)", [i(Errors)]),
+                !IO)
         ;
             true
         )
     ;
         Line = message_separator,
         Attr = Attrs ^ p_separator,
-        draw(Panel, Attr, "~", !IO)
+        draw(Screen, Panel, Attr, "~", !IO)
     ).
 
-:- func quote_level_to_attr(pager_attrs, quote_level) = attr.
+:- func quote_level_to_attr(pager_attrs, quote_level) = curs.attr.
 
 quote_level_to_attr(Attrs, QuoteLevel) = Attr :-
     ( QuoteLevel = 0 ->
@@ -1828,7 +1835,7 @@ quote_level_to_attr(Attrs, QuoteLevel) = Attr :-
         Attr = Attrs ^ p_quote_even
     ).
 
-:- func diff_line_to_attr(pager_attrs, diff_line) = attr.
+:- func diff_line_to_attr(pager_attrs, diff_line) = curs.attr.
 
 diff_line_to_attr(Attrs, diff_common) = Attrs ^ p_diff_common.
 diff_line_to_attr(Attrs, diff_add) = Attrs ^ p_diff_add.
diff --git a/src/pipe_to.m b/src/pipe_to.m
index 0fa5b74..62e5626 100644
--- a/src/pipe_to.m
+++ b/src/pipe_to.m
@@ -23,11 +23,12 @@
 :- import_module string.
 
 :- import_module call_system.
-:- import_module curs.
 :- import_module prog_config.
 :- import_module quote_arg.
 :- import_module shell_word.
 
+:- use_module curs.
+
 prompt_and_pipe_to_command(Screen, PromptCommand, Strings, MessageUpdate,
         !History, !IO) :-
     text_entry(Screen, PromptCommand, !.History, complete_none, Return, !IO),
diff --git a/src/recall.m b/src/recall.m
index 380f4ba..2eff17e 100644
--- a/src/recall.m
+++ b/src/recall.m
@@ -28,13 +28,13 @@
 
 :- import_module callout.
 :- import_module color.
-:- import_module curs.
-:- import_module curs.panel.
 :- import_module maildir.
 :- import_module scrollable.
 :- import_module tags.
 :- import_module time_util.
 
+:- use_module curs.
+
 %-----------------------------------------------------------------------------%
 
 :- type recall_info
@@ -114,18 +114,18 @@ make_recall_line(Config, Nowish, MessageId, MaybeLine, !IO) :-
 recall_screen_loop(Screen, MaybeSelected, !Info, !IO) :-
     draw_recall(Screen, !.Info, !IO),
     draw_status_bar(Screen, !IO),
-    panel.update_panels(!IO),
+    update_panels(Screen, !IO),
     get_keycode_blocking(KeyCode, !IO),
     (
         ( KeyCode = char('j')
-        ; KeyCode = code(key_down)
+        ; KeyCode = code(curs.key_down)
         )
     ->
         move_cursor(Screen, 1, !Info, !IO),
         recall_screen_loop(Screen, MaybeSelected, !Info, !IO)
     ;
         ( KeyCode = char('k')
-        ; KeyCode = code(key_up)
+        ; KeyCode = code(curs.key_up)
         )
     ->
         move_cursor(Screen, -1, !Info, !IO),
@@ -150,10 +150,10 @@ recall_screen_loop(Screen, MaybeSelected, !Info, !IO) :-
             recall_screen_loop(Screen, MaybeSelected, !Info, !IO)
         )
     ;
-        KeyCode = code(key_resize)
+        KeyCode = code(curs.key_resize)
     ->
-        replace_screen_for_resize(Screen, NewScreen, !IO),
-        recall_screen_loop(NewScreen, MaybeSelected, !Info, !IO)
+        recreate_screen_for_resize(Screen, !IO),
+        recall_screen_loop(Screen, MaybeSelected, !Info, !IO)
     ;
         recall_screen_loop(Screen, MaybeSelected, !Info, !IO)
     ).
@@ -163,7 +163,7 @@ recall_screen_loop(Screen, MaybeSelected, !Info, !IO) :-
 
 move_cursor(Screen, Delta, !Info, !IO) :-
     !.Info ^ r_scrollable = Scrollable0,
-    get_main_rows(Screen, NumRows),
+    get_main_rows(Screen, NumRows, !IO),
     scrollable.move_cursor(NumRows, Delta, HitLimit, Scrollable0, Scrollable),
     !Info ^ r_scrollable := Scrollable,
     (
@@ -243,15 +243,15 @@ delete_draft(Screen, !Info, !IO) :-
 :- pred draw_recall(screen::in, recall_info::in, io::di, io::uo) is det.
 
 draw_recall(Screen, Info, !IO) :-
-    get_main_panels(Screen, Panels),
+    get_main_panels(Screen, Panels, !IO),
     Info = recall_info(Config, Scrollable),
     Attrs = generic_attrs(Config),
-    scrollable.draw(draw_recall_line(Attrs), Panels, Scrollable, !IO).
+    scrollable.draw(draw_recall_line(Attrs), Screen, Panels, Scrollable, !IO).
 
-:- pred draw_recall_line(generic_attrs::in, panel::in, recall_line::in,
-    int::in, bool::in, io::di, io::uo) is det.
+:- pred draw_recall_line(generic_attrs::in, screen::in, vpanel::in,
+    recall_line::in, int::in, bool::in, io::di, io::uo) is det.
 
-draw_recall_line(Attrs, Panel, Line, _LineNr, IsCursor, !IO) :-
+draw_recall_line(Attrs, Screen, Panel, Line, _LineNr, IsCursor, !IO) :-
     Line = recall_line(_FileName, RelDate, To, Subject, Tags),
     (
         IsCursor = yes,
@@ -260,33 +260,34 @@ draw_recall_line(Attrs, Panel, Line, _LineNr, IsCursor, !IO) :-
         IsCursor = no,
         RelDateAttr = Attrs ^ relative_date
     ),
-    draw_fixed(Panel, RelDateAttr, 13, RelDate, ' ', !IO),
+    draw_fixed(Screen, Panel, RelDateAttr, 13, RelDate, ' ', !IO),
 
     NameAttr = Attrs ^ field_name,
     BodyAttr = Attrs ^ field_body,
-    mattr_draw(Panel, unless(IsCursor, NameAttr), "To: ", !IO),
-    mattr_draw_fixed(Panel, unless(IsCursor, BodyAttr),
+    mattr_draw(Screen, Panel, unless(IsCursor, NameAttr), "To: ", !IO),
+    mattr_draw_fixed(Screen, Panel, unless(IsCursor, BodyAttr),
         25, header_value_string(To), ' ', !IO),
-    mattr_draw(Panel, unless(IsCursor, NameAttr), " Subject: ", !IO),
-    mattr_draw(Panel, unless(IsCursor, BodyAttr), header_value_string(Subject),
-        !IO),
-    attr_set(Panel, Attrs ^ other_tag, !IO),
-    set.fold(draw_display_tag(Panel), Tags, !IO).
+    mattr_draw(Screen, Panel, unless(IsCursor, NameAttr), " Subject: ", !IO),
+    mattr_draw(Screen, Panel, unless(IsCursor, BodyAttr),
+        header_value_string(Subject), !IO),
+    attr(Screen, Panel, Attrs ^ other_tag, !IO),
+    set.fold(draw_display_tag(Screen, Panel), Tags, !IO).
 
-:- pred draw_display_tag(panel::in, tag::in, io::di, io::uo) is det.
+:- pred draw_display_tag(screen::in, vpanel::in, tag::in, io::di, io::uo)
+    is det.
 
-draw_display_tag(Panel, Tag, !IO) :-
+draw_display_tag(Screen, Panel, Tag, !IO) :-
     (
         Tag \= draft_tag,
         display_tag(Tag)
     ->
         Tag = tag(TagName),
-        draw2(Panel, " ", TagName, !IO)
+        draw2(Screen, Panel, " ", TagName, !IO)
     ;
         true
     ).
 
-:- func unless(bool, attr) = maybe(attr).
+:- func unless(bool, curs.attr) = maybe(curs.attr).
 
 unless(no, X) = yes(X).
 unless(yes, _) = no.
diff --git a/src/resend.m b/src/resend.m
index d33f39e..c01a9f2 100644
--- a/src/resend.m
+++ b/src/resend.m
@@ -27,13 +27,14 @@
 :- import_module string.
 
 :- import_module compose.
-:- import_module curs.
 :- import_module make_temp.
 :- import_module quote_arg.
 :- import_module rfc5322.
 :- import_module rfc5322.parser.
 :- import_module send_util.
 
+:- use_module curs.
+
 :- type sent
     --->    sent
     ;       not_sent.
diff --git a/src/screen.m b/src/screen.m
index 2f686d8..6b9c4d9 100644
--- a/src/screen.m
+++ b/src/screen.m
@@ -10,14 +10,19 @@
 :- import_module maybe.
 
 :- import_module color.
-:- import_module curs.
-:- import_module curs.panel.
 :- import_module time_util.
 
+:- use_module curs.
+
 %-----------------------------------------------------------------------------%
 
 :- type screen.
 
+:- type vpanel
+    --->    main_panel(int)
+    ;       bar_panel
+    ;       msgentry_panel.
+
 :- type message_update
     --->    no_change
     ;       clear_message
@@ -37,60 +42,69 @@
 :- type sigint_received
     --->    sigint_received.
 
-:- pred create_screen(status_attrs::in, screen::uo, io::di, io::uo) is det.
+:- pred create_screen(status_attrs::in, screen::out, io::di, io::uo) is det.
 
-:- pred replace_screen_for_resize(screen::in, screen::out, io::di, io::uo)
-    is det.
+:- pred recreate_screen_for_resize(screen::in, io::di, io::uo) is det.
 
-:- pred fast_forward_screen(screen::in, screen::out, screen_resized::out,
-    io::di, io::uo) is det.
+:- pred get_cols(screen::in, int::out, io::di, io::uo) is det.
 
-:- pred get_cols(screen::in, int::out) is det.
+:- pred get_rows_cols(screen::in, int::out, int::out, io::di, io::uo) is det.
 
-:- pred get_rows_cols(screen::in, int::out, int::out) is det.
+:- pred get_main_panels(screen::in, list(vpanel)::out, io::di, io::uo) is det.
 
-:- pred get_main_panels(screen::in, list(panel)::out) is det.
+:- pred get_main_rows(screen::in, int::out, io::di, io::uo) is det.
 
-:- pred get_main_rows(screen::in, int::out) is det.
+%-----------------------------------------------------------------------------%
 
-:- pred get_bar_panel(screen::in, panel::out) is det.
+:- pred getyx(screen::in, vpanel::in, int::out, int::out, io::di, io::uo)
+    is det.
 
-:- pred get_msgentry_panel(screen::in, panel::out) is det.
+:- pred getmaxyx(screen::in, vpanel::in, int::out, int::out, io::di, io::uo)
+    is det.
 
-%-----------------------------------------------------------------------------%
+:- pred move(screen::in, vpanel::in, int::in, int::in, io::di, io::uo) is det.
 
-    % The draw routines are like curs.addstr but doesn't add the string if the
-    % cursor is already at the end of the panel.
-    %
-    % The draw_fixed routines additionally truncate the string if it would
-    % exceed the given number of columns.  Afterwards the cursor is placed
-    % NrCols after the original position (or otherwise the right margin of the
-    % panel).
+:- pred erase(screen::in, vpanel::in, io::di, io::uo) is det.
 
-:- pred attr(panel::in, attr::in, io::di, io::uo) is det.
+:- pred attr(screen::in, vpanel::in, curs.attr::in, io::di, io::uo) is det.
 
-:- pred mattr(panel::in, maybe(attr)::in, io::di, io::uo) is det.
+:- pred mattr(screen::in, vpanel::in, maybe(curs.attr)::in, io::di, io::uo)
+    is det.
 
-:- pred draw(panel::in, string::in, io::di, io::uo) is det.
+    % The draw routines do not add the string if the cursor is already at the
+    % end of the panel.
+    %
+:- pred draw(screen::in, vpanel::in, string::in, io::di, io::uo) is det.
 
-:- pred draw2(panel::in, string::in, string::in, io::di, io::uo) is det.
+:- pred draw2(screen::in, vpanel::in, string::in, string::in, io::di, io::uo)
+    is det.
 
-:- pred draw(panel::in, attr::in, string::in, io::di, io::uo) is det.
+:- pred draw(screen::in, vpanel::in, curs.attr::in, string::in, io::di, io::uo)
+    is det.
 
-:- pred draw(panel::in, attr::in, string::in, int::in, int::in,
-    io::di, io::uo) is det.
+:- pred draw(screen::in, vpanel::in, curs.attr::in, string::in, int::in,
+    int::in, io::di, io::uo) is det.
 
-:- pred draw_fixed(panel::in, int::in, string::in, char::in,
+    % The draw_fixed routines truncate the string if it would exceed the given
+    % number of columns. Afterwards the cursor is placed NrCols after the
+    % original position (or otherwise the right margin of the panel).
+    %
+:- pred draw_fixed(screen::in, vpanel::in, int::in, string::in, char::in,
     io::di, io::uo) is det.
 
-:- pred draw_fixed(panel::in, attr::in, int::in, string::in, char::in,
+:- pred draw_fixed(screen::in, vpanel::in, curs.attr::in, int::in, string::in,
+    char::in, io::di, io::uo) is det.
+
+:- pred mattr_draw(screen::in, vpanel::in, maybe(curs.attr)::in, string::in,
     io::di, io::uo) is det.
 
-:- pred mattr_draw(panel::in, maybe(attr)::in, string::in, io::di, io::uo)
+:- pred mattr_draw_fixed(screen::in, vpanel::in, maybe(curs.attr)::in, int::in,
+    string::in, char::in, io::di, io::uo) is det.
+
+:- pred hline(screen::in, vpanel::in, char::in, int::in, io::di, io::uo)
     is det.
 
-:- pred mattr_draw_fixed(panel::in, maybe(attr)::in, int::in, string::in,
-    char::in, io::di, io::uo) is det.
+:- pred update_panels(screen::in, io::di, io::uo) is det.
 
 %-----------------------------------------------------------------------------%
 
@@ -120,213 +134,273 @@
 
 :- implementation.
 
+:- import_module array.
 :- import_module bool.
 :- import_module exception.
 :- import_module float.
 :- import_module int.
-:- import_module mutvar.
-:- import_module require.
+:- import_module store.
 :- import_module string.
 
 :- import_module async.
 :- import_module signal.
 :- import_module string_util.
 
+:- use_module curs.panel.
+
 %-----------------------------------------------------------------------------%
 
-:- type screen == mutvar(screen_version).
+:- type screen == io_mutvar(real_screen).
 
-:- type screen_version
+:- type real_screen
     --->    screen(
                 rows            :: int,
                 cols            :: int,
-                main_panels     :: list(panel),
-                bar_panel       :: panel,
-                msgentry_panel  :: panel,
+                main_vpanels    :: list(vpanel),
+                main_panels     :: array(curs.panel.panel),
+                bar_panel       :: curs.panel.panel,
+                msgentry_panel  :: curs.panel.panel,
                 status_attrs    :: status_attrs
-            )
-    ;       forward_screen(
-                % This version of the screen is obsolete,
-                % replaced by a forwarding pointer.
-                old_rows        :: int,
-                old_cols        :: int,
-                fwd_screen      :: screen
             ).
 
-:- inst real_screen
-    --->    screen(ground, ground, ground, ground, ground, ground).
-
 %-----------------------------------------------------------------------------%
 
-create_screen(Attrs, Screen, !IO) :-
-    promise_pure (
-        curs.rows_cols(Rows, Cols, !IO),
-        MainRows = Rows - 2,
-        BarRow = MainRows,
-        MsgEntryRow = BarRow + 1,
-
-        list.map_foldl(create_row_panel(Cols), 0..(MainRows - 1), MainPanels,
-            !IO),
-        create_row_panel(Cols, BarRow, BarPanel, !IO),
-        create_row_panel(Cols, MsgEntryRow, MsgEntryPanel, !IO),
-        RealScreen0 = screen(Rows, Cols, MainPanels, BarPanel, MsgEntryPanel,
-            Attrs),
-        % This is safe because RealScreen0 is definitely dynamically allocated.
-        unsafe_promise_unique(RealScreen0, RealScreen),
-        impure new_mutvar(RealScreen, Screen)
-    ).
+create_screen(Attrs, ScreenVar, !IO) :-
+    do_create_screen(Attrs, Screen, !IO),
+    new_mutvar(Screen, ScreenVar, !IO).
 
-:- pred create_row_panel(int::in, int::in, panel::out, io::di, io::uo) is det.
+:- pred do_create_screen(status_attrs::in, real_screen::out, io::di, io::uo)
+    is det.
 
-create_row_panel(Cols, Row, Panel, !IO) :-
-    panel.new(1, Cols, Row, 0, normal, Panel, !IO),
-    panel.scrollok(Panel, no, !IO).
+do_create_screen(Attrs, Screen, !IO) :-
+    curs.rows_cols(Rows, Cols, !IO),
+    MainRows = Rows - 2,
+    BarRow = MainRows,
+    MsgEntryRow = BarRow + 1,
+    MainVPanels = list.map(make_main_vpanel, 0..(MainRows - 1)),
+    list.map_foldl(create_row_panel(Cols), 0..(MainRows - 1), MainPanels, !IO),
+    create_row_panel(Cols, BarRow, BarPanel, !IO),
+    create_row_panel(Cols, MsgEntryRow, MsgEntryPanel, !IO),
+    Screen = screen(Rows, Cols, MainVPanels, array(MainPanels), BarPanel,
+        MsgEntryPanel, Attrs).
 
-%-----------------------------------------------------------------------------%
+:- func make_main_vpanel(int) = vpanel.
 
-replace_screen_for_resize(Screen0, Screen, !IO) :-
-    promise_pure (
-        impure destroy_screen(Screen0, OldRows, OldCols, Attrs, !IO),
-        create_screen(Attrs, Screen, !IO),
-        % Replace Screen0 by a forwarding pointer.
-        impure set_mutvar(Screen0, forward_screen(OldRows, OldCols, Screen))
-    ).
+make_main_vpanel(N) = main_panel(N).
 
-:- impure pred destroy_screen(screen::in, int::out, int::out,
-    status_attrs::out, io::di, io::uo) is det.
+:- pred create_row_panel(int::in, int::in, curs.panel.panel::out,
+    io::di, io::uo) is det.
 
-destroy_screen(Screen, OldRows, OldCols, Attrs, !IO) :-
-    impure get_mutvar(Screen, ScreenVersion),
-    (
-        ScreenVersion = screen(OldRows, OldCols, MainPanels, BarPanel,
-            MsgEntryPanel, Attrs),
-        % impure set_mutvar(Screen, destroyed_screen),
-        list.foldl(panel.delete, [BarPanel, MsgEntryPanel | MainPanels], !IO)
-    ;
-        ScreenVersion = forward_screen(_, _, _),
-        unexpected($module, $pred, "screen already destroyed")
-    ).
+create_row_panel(Cols, Row, Panel, !IO) :-
+    curs.panel.new(1, Cols, Row, 0, curs.normal, Panel, !IO),
+    curs.panel.scrollok(Panel, no, !IO).
 
 %-----------------------------------------------------------------------------%
 
-fast_forward_screen(Screen0, Screen, Resized, !IO) :-
-    promise_pure (
-        impure get_mutvar(Screen0, ScreenVersion),
-        (
-            ScreenVersion = screen(_, _, _, _, _, _),
-            Screen = Screen0,
-            Resized = no
-        ;
-            ScreenVersion = forward_screen(OldRows, OldCols, Screen1),
-            impure fast_forward_screen_2(Screen1, Screen, Rows, Cols),
-            Resized = ( Rows = OldRows, Cols = OldCols -> yes ; no )
-        )
-    ).
+recreate_screen_for_resize(ScreenVar, !IO) :-
+    get_mutvar(ScreenVar, Screen0, !IO),
+    Screen0 = screen(_Rows, _Cols, _MainVPanels, MainPanels, BarPanel,
+        MsgEntryPanel, Attrs),
 
-:- impure pred fast_forward_screen_2(screen::in, screen::out,
-    int::out, int::out) is det.
+    array.foldl(curs.panel.delete, MainPanels, !IO),
+    curs.panel.delete(BarPanel, !IO),
+    curs.panel.delete(MsgEntryPanel, !IO),
 
-fast_forward_screen_2(Screen0, Screen, Rows, Cols) :-
-    impure get_mutvar(Screen0, ScreenVersion),
-    (
-        ScreenVersion = screen(Rows, Cols, _, _, _, _),
-        Screen = Screen0
-    ;
-        ScreenVersion = forward_screen(_, _, Screen1),
-        impure fast_forward_screen_2(Screen1, Screen, Rows, Cols)
-    ).
+    do_create_screen(Attrs, Screen, !IO),
+    set_mutvar(ScreenVar, Screen, !IO).
 
 %-----------------------------------------------------------------------------%
 
-get_cols(Screen, Cols) :-
-    get_real_screen(Screen, RealScreen),
-    Cols = RealScreen ^ cols.
-
-get_rows_cols(Screen, Rows, Cols) :-
-    get_real_screen(Screen, RealScreen),
-    Rows = RealScreen ^ rows,
-    Cols = RealScreen ^ cols.
+get_cols(ScreenVar, Cols, !IO) :-
+    get_mutvar(ScreenVar, Screen, !IO),
+    Cols = Screen ^ cols.
 
-get_main_panels(Screen, MainPanels) :-
-    get_real_screen(Screen, RealScreen),
-    MainPanels = RealScreen ^ main_panels.
+get_rows_cols(ScreenVar, Rows, Cols, !IO) :-
+    get_mutvar(ScreenVar, Screen, !IO),
+    Rows = Screen ^ rows,
+    Cols = Screen ^ cols.
 
-get_main_rows(Screen, NumRows) :-
-    get_main_panels(Screen, MainPanels),
-    NumRows = list.length(MainPanels).
+get_main_panels(ScreenVar, MainVPanels, !IO) :-
+    get_mutvar(ScreenVar, Screen, !IO),
+    MainVPanels = Screen ^ main_vpanels.
 
-get_bar_panel(Screen, BarPanel) :-
-    get_real_screen(Screen, RealScreen),
-    BarPanel = RealScreen ^ bar_panel.
+get_main_rows(ScreenVar, NumRows, !IO) :-
+    get_mutvar(ScreenVar, Screen, !IO),
+    MainPanels = Screen ^ main_panels,
+    array.size(MainPanels, NumRows).
 
-get_msgentry_panel(Screen, MsgEntryPanel) :-
-    get_real_screen(Screen, RealScreen),
-    MsgEntryPanel = RealScreen ^ msgentry_panel.
+:- pred get_status_attrs(screen::in, status_attrs::out, io::di, io::uo) is det.
 
-:- pred get_status_attrs(screen::in, status_attrs::out) is det.
+get_status_attrs(ScreenVar, Attrs, !IO) :-
+    get_mutvar(ScreenVar, Screen, !IO),
+    Attrs = Screen ^ status_attrs.
 
-get_status_attrs(Screen, Attrs) :-
-    get_real_screen(Screen, RealScreen),
-    Attrs = RealScreen ^ status_attrs.
+%-----------------------------------------------------------------------------%
 
-:- pred get_real_screen(screen::in, screen_version::out(real_screen)) is det.
+:- pragma inline(get_panel/5).
+:- pred get_panel(screen::in, vpanel::in, maybe(curs.panel.panel)::out,
+    io::di, io::uo) is det.
 
-get_real_screen(Screen, RealScreen) :-
-    promise_pure (
-        impure get_mutvar(Screen, RealScreen),
-        (
-            RealScreen = screen(_, _, _, _, _, _)
+get_panel(ScreenVar, VPanel, MaybePanel, !IO) :-
+    get_mutvar(ScreenVar, Screen, !IO),
+    Screen = screen(_Rows, _Cols, _MainVPanels, MainPanels, BarPanel,
+        MsgEntryPanel, _Attrs),
+    (
+        VPanel = main_panel(N),
+        ( semidet_lookup(MainPanels, N, Panel) ->
+            MaybePanel = yes(Panel)
         ;
-            RealScreen = forward_screen(_, _, _),
-            unexpected($module, $pred, "screen already destroyed")
+            MaybePanel = no
         )
+    ;
+        VPanel = bar_panel,
+        MaybePanel = yes(BarPanel)
+    ;
+        VPanel = msgentry_panel,
+        MaybePanel = yes(MsgEntryPanel)
     ).
 
 %-----------------------------------------------------------------------------%
 
-attr(Panel, Attr, !IO) :-
-    panel.attr_set(Panel, Attr, !IO).
+getyx(Screen, VPanel, Y, X, !IO) :-
+    get_panel(Screen, VPanel, MaybePanel, !IO),
+    (
+        MaybePanel = yes(Panel),
+        curs.panel.getyx(Panel, Y, X, !IO)
+    ;
+        MaybePanel = no,
+        Y = 0,
+        X = 0
+    ).
+
+getmaxyx(Screen, VPanel, MaxY, MaxX, !IO) :-
+    get_panel(Screen, VPanel, MaybePanel, !IO),
+    (
+        MaybePanel = yes(Panel),
+        curs.panel.getmaxyx(Panel, MaxY, MaxX, !IO)
+    ;
+        MaybePanel = no,
+        MaxY = 0,
+        MaxX = 0
+    ).
+
+move(Screen, VPanel, Row, Col, !IO) :-
+    get_panel(Screen, VPanel, MaybePanel, !IO),
+    (
+        MaybePanel = yes(Panel),
+        curs.panel.move(Panel, Row, Col, !IO)
+    ;
+        MaybePanel = no
+    ).
+
+erase(Screen, VPanel, !IO) :-
+    get_panel(Screen, VPanel, MaybePanel, !IO),
+    (
+        MaybePanel = yes(Panel),
+        curs.panel.erase(Panel, !IO)
+    ;
+        MaybePanel = no
+    ).
+
+%-----------------------------------------------------------------------------%
+
+attr(Screen, VPanel, Attr, !IO) :-
+    get_panel(Screen, VPanel, MaybePanel, !IO),
+    (
+        MaybePanel = yes(Panel),
+        curs.panel.attr_set(Panel, Attr, !IO)
+    ;
+        MaybePanel = no
+    ).
+
+mattr(_Screen, _Panel, no, !IO).
+mattr(Screen, Panel, yes(Attr), !IO) :-
+    attr(Screen, Panel, Attr, !IO).
+
+draw(Screen, VPanel, String, !IO) :-
+    get_panel(Screen, VPanel, MaybePanel, !IO),
+    (
+        MaybePanel = yes(Panel),
+        my_addstr(Panel, String, !IO)
+    ;
+        MaybePanel = no
+    ).
 
-mattr(_Panel, no, !IO).
-mattr(Panel, yes(Attr), !IO) :-
-    attr(Panel, Attr, !IO).
+draw2(Screen, VPanel, StringA, StringB, !IO) :-
+    get_panel(Screen, VPanel, MaybePanel, !IO),
+    (
+        MaybePanel = yes(Panel),
+        my_addstr(Panel, StringA, StringB, !IO)
+    ;
+        MaybePanel = no
+    ).
 
-draw(Panel, String, !IO) :-
-    my_addstr(Panel, String, !IO).
+draw(Screen, VPanel, Attr, String, !IO) :-
+    get_panel(Screen, VPanel, MaybePanel, !IO),
+    (
+        MaybePanel = yes(Panel),
+        curs.panel.attr_set(Panel, Attr, !IO),
+        my_addstr(Panel, String, !IO)
+    ;
+        MaybePanel = no
+    ).
 
-draw2(Panel, StringA, StringB, !IO) :-
-    my_addstr(Panel, StringA, StringB, !IO).
+draw(Screen, VPanel, Attr, String, Start, End, !IO) :-
+    get_panel(Screen, VPanel, MaybePanel, !IO),
+    (
+        MaybePanel = yes(Panel),
+        curs.panel.attr_set(Panel, Attr, !IO),
+        my_addstr(Panel, string.between(String, Start, End), !IO)
+    ;
+        MaybePanel = no
+    ).
 
-draw(Panel, Attr, String, !IO) :-
-    panel.attr_set(Panel, Attr, !IO),
-    draw(Panel, String, !IO).
+draw_fixed(Screen, VPanel, NrCols, String, PadChar, !IO) :-
+    get_panel(Screen, VPanel, MaybePanel, !IO),
+    (
+        MaybePanel = yes(Panel),
+        my_addstr_fixed(Panel, NrCols, String, PadChar, !IO)
+    ;
+        MaybePanel = no
+    ).
 
-draw(Panel, Attr, String, Start, End, !IO) :-
-    panel.attr_set(Panel, Attr, !IO),
-    draw(Panel, string.between(String, Start, End), !IO).
+draw_fixed(Screen, VPanel, Attr, NrCols, String, PadChar, !IO) :-
+    get_panel(Screen, VPanel, MaybePanel, !IO),
+    (
+        MaybePanel = yes(Panel),
+        curs.panel.attr_set(Panel, Attr, !IO),
+        my_addstr_fixed(Panel, NrCols, String, PadChar, !IO)
+    ;
+        MaybePanel = no
+    ).
 
-draw_fixed(Panel, NrCols, String, PadChar, !IO) :-
-    my_addstr_fixed(Panel, NrCols, String, PadChar, !IO).
+mattr_draw(Screen, VPanel, MaybeAttr, String, !IO) :-
+    mattr(Screen, VPanel, MaybeAttr, !IO),
+    draw(Screen, VPanel, String, !IO).
 
-draw_fixed(Panel, Attr, NrCols, String, PadChar, !IO) :-
-    panel.attr_set(Panel, Attr, !IO),
-    my_addstr_fixed(Panel, NrCols, String, PadChar, !IO).
+mattr_draw_fixed(Screen, VPanel, MaybeAttr, NrCols, String, PadChar, !IO) :-
+    mattr(Screen, VPanel, MaybeAttr, !IO),
+    draw_fixed(Screen, VPanel, NrCols, String, PadChar, !IO).
 
-mattr_draw(Panel, MaybeAttr, String, !IO) :-
-    mattr(Panel, MaybeAttr, !IO),
-    draw(Panel, String, !IO).
+hline(Screen, VPanel, C, N, !IO) :-
+    get_panel(Screen, VPanel, MaybePanel, !IO),
+    (
+        MaybePanel = yes(Panel),
+        curs.panel.hline(Panel, char.to_int(C), N, !IO)
+    ;
+        MaybePanel = no
+    ).
 
-mattr_draw_fixed(Panel, MaybeAttr, NrCols, String, PadChar, !IO) :-
-    mattr(Panel, MaybeAttr, !IO),
-    draw_fixed(Panel, NrCols, String, PadChar, !IO).
+update_panels(_Screen, !IO) :-
+    curs.panel.update_panels(!IO).
 
 %-----------------------------------------------------------------------------%
 
-:- pred my_addstr(panel::in, string::in, io::di, io::uo) is det.
+:- pred my_addstr(curs.panel.panel::in, string::in, io::di, io::uo) is det.
 
 my_addstr(Panel, String, !IO) :-
-    getyx(Panel, _, X, !IO),
-    getmaxyx(Panel, _, MaxX, !IO),
+    curs.panel.getyx(Panel, _, X, !IO),
+    curs.panel.getmaxyx(Panel, _, MaxX, !IO),
     % XXX We cannot tell if we have already hit the last column, before or
     % after having drawn to it.  This hack checks the second last column
     % instead, which means it actually prevents drawing one column early.
@@ -334,28 +408,29 @@ my_addstr(Panel, String, !IO) :-
     ( X >= MaxX - 1 ->
         true
     ;
-        addstr(Panel, String, !IO)
+        curs.panel.addstr(Panel, String, !IO)
     ).
 
-:- pred my_addstr(panel::in, string::in, string::in, io::di, io::uo) is det.
+:- pred my_addstr(curs.panel.panel::in, string::in, string::in, io::di, io::uo)
+    is det.
 
 my_addstr(Panel, StringA, StringB, !IO) :-
-    getyx(Panel, _, X, !IO),
-    getmaxyx(Panel, _, MaxX, !IO),
+    curs.panel.getyx(Panel, _, X, !IO),
+    curs.panel.getmaxyx(Panel, _, MaxX, !IO),
     % XXX See comment in my_addstr.
     ( X >= MaxX - 1 ->
         true
     ;
-        addstr(Panel, StringA, !IO),
-        addstr(Panel, StringB, !IO)
+        curs.panel.addstr(Panel, StringA, !IO),
+        curs.panel.addstr(Panel, StringB, !IO)
     ).
 
-:- pred my_addstr_fixed(panel::in, int::in, string::in, char::in,
+:- pred my_addstr_fixed(curs.panel.panel::in, int::in, string::in, char::in,
     io::di, io::uo) is det.
 
 my_addstr_fixed(Panel, NrCols, String, PadChar, !IO) :-
-    getyx(Panel, _, X0, !IO),
-    getmaxyx(Panel, _, MaxX, !IO),
+    curs.panel.getyx(Panel, _, X0, !IO),
+    curs.panel.getmaxyx(Panel, _, MaxX, !IO),
     % XXX See comment in my_addstr.
     ( X0 >= MaxX - 1 ->
         true
@@ -368,20 +443,21 @@ my_addstr_fixed(Panel, NrCols, String, PadChar, !IO) :-
         ),
         Start = 0,
         count_loop(String, RemCols, Start, End),
-        addstr(Panel, string.between(String, Start, End), !IO),
+        curs.panel.addstr(Panel, string.between(String, Start, End), !IO),
 
-        getyx(Panel, _, X1, !IO),
+        curs.panel.getyx(Panel, _, X1, !IO),
         N = (X0 + NrCols) - X1,
         add_padding(Panel, N, string.from_char(PadChar), !IO)
     ).
 
-:- pred add_padding(panel::in, int::in, string::in, io::di, io::uo) is det.
+:- pred add_padding(curs.panel.panel::in, int::in, string::in, io::di, io::uo)
+    is det.
 
 add_padding(Panel, N, PadChar, !IO) :-
     ( N =< 0 ->
         true
     ;
-        panel.addstr(Panel, PadChar, !IO),
+        curs.panel.addstr(Panel, PadChar, !IO),
         add_padding(Panel, N - 1, PadChar, !IO)
     ).
 
@@ -402,13 +478,13 @@ count_loop(String, RemCols, !Index) :-
 %-----------------------------------------------------------------------------%
 
 update_message(Screen, MessageUpdate, !IO) :-
-    get_msgentry_panel(Screen, Panel),
-    get_status_attrs(Screen, Attrs),
+    Panel = msgentry_panel,
+    get_status_attrs(Screen, Attrs, !IO),
     (
         MessageUpdate = no_change
     ;
         MessageUpdate = clear_message,
-        panel.erase(Panel, !IO)
+        erase(Screen, Panel, !IO)
     ;
         (
             MessageUpdate = set_info(String),
@@ -420,13 +496,13 @@ update_message(Screen, MessageUpdate, !IO) :-
             MessageUpdate = set_prompt(String),
             Attr = Attrs ^ prompt
         ),
-        panel.erase(Panel, !IO),
-        draw(Panel, Attr, String, !IO)
+        erase(Screen, Panel, !IO),
+        draw(Screen, Panel, Attr, String, !IO)
     ).
 
 update_message_immed(Screen, MessageUpdate, !IO) :-
     update_message(Screen, MessageUpdate, !IO),
-    panel.update_panels(!IO).
+    update_panels(Screen, !IO).
 
 %-----------------------------------------------------------------------------%
 
@@ -434,19 +510,19 @@ draw_status_bar(Screen, !IO) :-
     draw_status_bar(Screen, no, no, !IO).
 
 draw_status_bar(Screen, MaybeText, MaybeProgress, !IO) :-
-    get_status_attrs(Screen, Attrs),
-    get_cols(Screen, Cols),
-    get_bar_panel(Screen, Panel),
-    panel.erase(Panel, !IO),
-    attr(Panel, Attrs ^ bar, !IO),
-    hline(Panel, char.to_int('-'), Cols, !IO),
+    Panel = bar_panel,
+    get_status_attrs(Screen, Attrs, !IO),
+    get_cols(Screen, Cols, !IO),
+    erase(Screen, Panel, !IO),
+    attr(Screen, Panel, Attrs ^ bar, !IO),
+    hline(Screen, Panel, '-', Cols, !IO),
     (
         MaybeText = yes(Text),
-        move(Panel, 0, 4, !IO),
-        draw(Panel, " ", !IO),
-        draw(Panel, Text, !IO),
-        draw(Panel, " ", !IO),
-        getyx(Panel, _, MinX, !IO)
+        move(Screen, Panel, 0, 4, !IO),
+        draw(Screen, Panel, " ", !IO),
+        draw(Screen, Panel, Text, !IO),
+        draw(Screen, Panel, " ", !IO),
+        getyx(Screen, Panel, _, MinX, !IO)
     ;
         MaybeText = no,
         MinX = 0
@@ -456,10 +532,10 @@ draw_status_bar(Screen, MaybeText, MaybeProgress, !IO) :-
         % Just drop progress text if it won't fit.
         ProgressTextCol = Cols - 4 - string_wcwidth(ProgressText) - 1,
         ( if ProgressTextCol >= MinX then
-            move(Panel, 0, ProgressTextCol, !IO),
-            draw(Panel, " ", !IO),
-            draw(Panel, ProgressText, !IO),
-            draw(Panel, " ", !IO)
+            move(Screen, Panel, 0, ProgressTextCol, !IO),
+            draw(Screen, Panel, " ", !IO),
+            draw(Screen, Panel, ProgressText, !IO),
+            draw(Screen, Panel, " ", !IO)
         else
             true
         )
@@ -490,7 +566,7 @@ get_keycode_2(Code, !IO) :-
         % Redraw the whole screen with ^L.
         % I have a feeling this is not really correct.
         curs.redrawwin_stdscr(!IO),
-        panel.update_panels(!IO),
+        curs.panel.update_panels(!IO),
         get_keycode_2(Code, !IO)
     ;
         IsCode = yes,
@@ -500,9 +576,9 @@ get_keycode_2(Code, !IO) :-
         ( C = 0 ->
             Code = timeout_or_error
         ; C = 27 -> % Escape
-            nodelay(yes, !IO),
+            curs.nodelay(yes, !IO),
             curs.get_wch(C2, IsCode2, !IO),
-            nodelay(no, !IO),
+            curs.nodelay(no, !IO),
             (
                 IsCode2 = yes,
                 Code = metacode(C2)
diff --git a/src/scrollable.m b/src/scrollable.m
index e2abc59..464b08c 100644
--- a/src/scrollable.m
+++ b/src/scrollable.m
@@ -9,8 +9,7 @@
 :- import_module list.
 :- import_module version_array.
 
-:- import_module curs.
-:- import_module curs.panel.
+:- import_module screen.
 
 %-----------------------------------------------------------------------------%
 
@@ -20,8 +19,8 @@
     --->    dir_forward
     ;       dir_reverse.
 
-:- type draw_line(T) == pred(panel, T, int, bool, io, io).
-:- inst draw_line    == (pred(in, in, in, in, di, uo) is det).
+:- type draw_line(T) == pred(screen, vpanel, T, int, bool, io, io).
+:- inst draw_line    == (pred(in, in, in, in, in, di, uo) is det).
 
 :- func init(list(T)) = scrollable(T).
 
@@ -91,8 +90,8 @@
 
 :- pred delete_cursor_line(scrollable(T)::in, scrollable(T)::out) is semidet.
 
-:- pred draw(draw_line(T)::in(draw_line), list(panel)::in, scrollable(T)::in,
-    io::di, io::uo) is det.
+:- pred draw(draw_line(T)::in(draw_line), screen::in, list(vpanel)::in,
+    scrollable(T)::in, io::di, io::uo) is det.
 
 %-----------------------------------------------------------------------------%
 %-----------------------------------------------------------------------------%
@@ -362,7 +361,7 @@ delete_cursor_line(Scrollable0, Scrollable) :-
 
 %-----------------------------------------------------------------------------%
 
-draw(Pred, RowPanels, Scrollable, !IO) :-
+draw(Pred, Screen, RowPanels, Scrollable, !IO) :-
     Scrollable = scrollable(Lines, Top, MaybeCursor),
     (
         MaybeCursor = yes(Cursor)
@@ -370,23 +369,23 @@ draw(Pred, RowPanels, Scrollable, !IO) :-
         MaybeCursor = no,
         Cursor = -1
     ),
-    draw_lines(Pred, RowPanels, Lines, Top, Cursor, !IO).
+    draw_lines(Pred, Screen, RowPanels, Lines, Top, Cursor, !IO).
 
-:- pred draw_lines(draw_line(T)::in(draw_line), list(panel)::in,
+:- pred draw_lines(draw_line(T)::in(draw_line), screen::in, list(vpanel)::in,
     version_array(T)::in, int::in, int::in, io::di, io::uo) is det.
 
-draw_lines(_Pred, [], _, _, _, !IO).
-draw_lines(Pred, [Panel | Panels], Lines, I, Cursor, !IO) :-
-    panel.erase(Panel, !IO),
+draw_lines(_Pred, _, [], _, _, _, !IO).
+draw_lines(Pred, Screen, [Panel | Panels], Lines, I, Cursor, !IO) :-
+    erase(Screen, Panel, !IO),
     Size = version_array.size(Lines),
     ( I < Size ->
         Line = version_array.lookup(Lines, I),
         IsCursor = (I = Cursor -> yes ; no),
-        Pred(Panel, Line, I, IsCursor, !IO)
+        Pred(Screen, Panel, Line, I, IsCursor, !IO)
     ;
         true
     ),
-    draw_lines(Pred, Panels, Lines, I + 1, Cursor, !IO).
+    draw_lines(Pred, Screen, Panels, Lines, I + 1, Cursor, !IO).
 
 :- func clamp(int, int, int) = int.
 
diff --git a/src/text_entry.m b/src/text_entry.m
index 1ea6bae..2ea35e7 100644
--- a/src/text_entry.m
+++ b/src/text_entry.m
@@ -72,13 +72,13 @@
 
 :- import_module addressbook.
 :- import_module call_system.
-:- import_module curs.
-:- import_module curs.panel.
 :- import_module list_util.
 :- import_module notmuch_config.
 :- import_module quote_arg.
 :- import_module string_util.
 
+:- use_module curs.
+
 :- type info
     --->    info(
                 prompt          :: string,          % static
@@ -196,7 +196,7 @@ text_entry_loop(Screen, Return, !Info, !IO) :-
     ;
         ( Key = char('\x7f\') % DEL
         ; Key = char('\x08\') % BS
-        ; Key = code(key_backspace)
+        ; Key = code(curs.key_backspace)
         )
     ->
         modify_before(delete_char, yes, !Info),
@@ -205,14 +205,14 @@ text_entry_loop(Screen, Return, !Info, !IO) :-
         ( Key = char('\x17\') % ^W
         ; Key = meta('\x7f\') % DEL
         ; Key = meta('\x08\') % BS
-        ; Key = metacode(key_backspace)
+        ; Key = metacode(curs.key_backspace)
         )
     ->
         modify_before(delete_word, yes, !Info),
         continue_text_entry(Screen, Return, !Info, !IO)
     ;
         ( Key = char('\x04\') % ^D
-        ; Key = code(key_del)
+        ; Key = code(curs.key_del)
         )
     ->
         modify_after(delete_char, yes, !Info),
@@ -224,14 +224,14 @@ text_entry_loop(Screen, Return, !Info, !IO) :-
         continue_text_entry(Screen, Return, !Info, !IO)
     ;
         ( Key = char('\x02\') % ^B
-        ; Key = code(key_left)
+        ; Key = code(curs.key_left)
         )
     ->
         modify_before_after(left_char, no, !Info),
         continue_text_entry(Screen, Return, !Info, !IO)
     ;
         ( Key = char('\x06\') % ^F
-        ; Key = code(key_right)
+        ; Key = code(curs.key_right)
         )
     ->
         modify_before_after(right_char, no, !Info),
@@ -248,14 +248,14 @@ text_entry_loop(Screen, Return, !Info, !IO) :-
         continue_text_entry(Screen, Return, !Info, !IO)
     ;
         ( Key = char('\x01\') % ^A
-        ; Key = code(key_home)
+        ; Key = code(curs.key_home)
         )
     ->
         modify_before_after(bol, no, !Info),
         continue_text_entry(Screen, Return, !Info, !IO)
     ;
         ( Key = char('\x05\') % ^E
-        ; Key = code(key_end)
+        ; Key = code(curs.key_end)
         )
     ->
         modify_before_after(eol, no, !Info),
@@ -277,14 +277,14 @@ text_entry_loop(Screen, Return, !Info, !IO) :-
         continue_text_entry(Screen, Return, !Info, !IO)
     ;
         ( Key = char('\x10\') % ^P
-        ; Key = code(key_up)
+        ; Key = code(curs.key_up)
         )
     ->
         move_history(pre, !Info),
         continue_text_entry(Screen, Return, !Info, !IO)
     ;
         ( Key = char('\xe\') % ^N
-        ; Key = code(key_down)
+        ; Key = code(curs.key_down)
         )
     ->
         move_history(post, !Info),
@@ -294,7 +294,7 @@ text_entry_loop(Screen, Return, !Info, !IO) :-
             Key = char('\x09\'), % Tab
             CycleDir = forward
         ;
-            Key = code(key_btab), % Shift-Tab
+            Key = code(curs.key_btab), % Shift-Tab
             CycleDir = back
         )
     ->
@@ -1055,7 +1055,7 @@ draw_text_entry(Screen, !Info, !IO) :-
     !.Info ^ state = te_state(Before, After, _Pre, _Post),
     !.Info ^ left_offset = LeftOffset0,
 
-    get_cols(Screen, Cols),
+    get_cols(Screen, Cols, !IO),
     RemainCols = Cols - string_wcwidth(Prompt),
     calc_draw(RemainCols, Before, BeforeDraw, After, AfterDraw,
         LeftOffset0, LeftOffset),
@@ -1064,12 +1064,12 @@ draw_text_entry(Screen, !Info, !IO) :-
 
     % Bit ugly.
     update_message(Screen, set_prompt(Prompt), !IO),
-    get_msgentry_panel(Screen, Panel),
-    draw(Panel, string.from_rev_char_list(BeforeDraw), !IO),
-    panel.getyx(Panel, Y, X, !IO),
-    draw(Panel, string.from_char_list(AfterDraw), !IO),
-    panel.move(Panel, Y, X, !IO),
-    panel.update_panels(!IO).
+    Panel = msgentry_panel,
+    draw(Screen, Panel, string.from_rev_char_list(BeforeDraw), !IO),
+    getyx(Screen, Panel, Y, X, !IO),
+    draw(Screen, Panel, string.from_char_list(AfterDraw), !IO),
+    move(Screen, Panel, Y, X, !IO),
+    update_panels(Screen, !IO).
 
 :- pred calc_draw(int::in, list(char)::in, list(char)::out,
     list(char)::in, list(char)::out, int::in, int::out) is det.
diff --git a/src/thread_pager.m b/src/thread_pager.m
index 86358ba..6131e31 100644
--- a/src/thread_pager.m
+++ b/src/thread_pager.m
@@ -59,8 +59,6 @@
 :- import_module color.
 :- import_module compose.
 :- import_module cord_util.
-:- import_module curs.
-:- import_module curs.panel.
 :- import_module make_temp.
 :- import_module mime_type.
 :- import_module pager.
@@ -77,6 +75,8 @@
 :- import_module time_util.
 :- import_module view_async.
 
+:- use_module curs.
+
 %-----------------------------------------------------------------------------%
 
 :- type thread_pager_info
@@ -374,7 +374,7 @@ verify_arg(no) = "--verify=false".
 
 create_pager_and_thread_lines(Config, Screen, Messages, Ordering,
         Scrollable, NumThreadRows, PagerInfo, NumPagerRows, !IO) :-
-    get_rows_cols(Screen, Rows0, Cols),
+    get_rows_cols(Screen, Rows0, Cols, !IO),
     Rows = Rows0 - 2,
     current_timestamp(NowTime, !IO),
     localtime(NowTime, Nowish, !IO),
@@ -437,10 +437,10 @@ get_latest_line(LineA, LineB, Line) :-
     ).
 
 :- pred resize_thread_pager(screen::in,
-    thread_pager_info::in, thread_pager_info::out) is det.
+    thread_pager_info::in, thread_pager_info::out, io::di, io::uo) is det.
 
-resize_thread_pager(Screen, !Info) :-
-    get_rows_cols(Screen, Rows, _Cols),
+resize_thread_pager(Screen, !Info, !IO) :-
+    get_rows_cols(Screen, Rows, _Cols, !IO),
     Scrollable0 = !.Info ^ tp_scrollable,
     compute_num_rows(Rows - 2, Scrollable0, NumThreadRows, NumPagerRows),
     ( get_cursor(Scrollable0, Cursor) ->
@@ -719,19 +719,12 @@ restore_tag_deltas(DeltaMap, ThreadLine0, ThreadLine) :-
 
 %-----------------------------------------------------------------------------%
 
-:- pred handle_screen_transition(screen::in, screen::out,
-    screen_transition(T)::in, T::out,
+:- pred handle_screen_transition(screen::in, screen_transition(T)::in, T::out,
     thread_pager_info::in, thread_pager_info::out, io::di, io::uo) is det.
 
-handle_screen_transition(Screen0, Screen, Transition, T, !Info, !IO) :-
+handle_screen_transition(Screen, Transition, T, !Info, !IO) :-
     Transition = screen_transition(T, MessageUpdate),
-    fast_forward_screen(Screen0, Screen, Resized, !IO),
-    (
-        Resized = yes,
-        resize_thread_pager(Screen, !Info)
-    ;
-        Resized = no
-    ),
+    resize_thread_pager(Screen, !Info, !IO),
     update_message(Screen, MessageUpdate, !IO).
 
 %-----------------------------------------------------------------------------%
@@ -748,7 +741,7 @@ thread_pager_loop(Screen, OnEntry, !Info, !IO) :-
     (
         OnEntry = redraw,
         draw_thread_pager(Screen, !.Info, !IO),
-        panel.update_panels(!IO)
+        update_panels(Screen, !IO)
     ;
         OnEntry = no_draw
     ;
@@ -777,9 +770,9 @@ thread_pager_loop(Screen, OnEntry, !Info, !IO) :-
         thread_pager_loop(Screen, no_draw, !Info, !IO)
     ;
         Action = resize,
-        replace_screen_for_resize(Screen, NewScreen, !IO),
-        resize_thread_pager(NewScreen, !Info),
-        thread_pager_loop(NewScreen, redraw, !Info, !IO)
+        recreate_screen_for_resize(Screen, !IO),
+        resize_thread_pager(Screen, !Info, !IO),
+        thread_pager_loop(Screen, redraw, !Info, !IO)
     ;
         Action = start_reply(Message, ReplyKind),
         (
@@ -789,22 +782,20 @@ thread_pager_loop(Screen, OnEntry, !Info, !IO) :-
             Crypto = !.Info ^ tp_crypto,
             start_reply(Config, Crypto, Screen, Message, ReplyKind, Transition,
                 !IO),
-            handle_screen_transition(Screen, NewScreen, Transition, Sent,
-                !Info, !IO),
+            handle_screen_transition(Screen, Transition, Sent, !Info, !IO),
             (
                 Sent = sent,
                 AddedMessages0 = !.Info ^ tp_added_messages,
                 !Info ^ tp_added_messages := AddedMessages0 + 1,
                 % XXX would be nice to move cursor to the sent message
-                reopen_thread_pager(NewScreen, no, !Info, !IO)
+                reopen_thread_pager(Screen, no, !Info, !IO)
             ;
                 Sent = not_sent
-            ),
-            thread_pager_loop(NewScreen, redraw, !Info, !IO)
+            )
         ;
-            Message = excluded_message(_, _, _, _, _),
-            thread_pager_loop(Screen, redraw, !Info, !IO)
-        )
+            Message = excluded_message(_, _, _, _, _)
+        ),
+        thread_pager_loop(Screen, redraw, !Info, !IO)
     ;
         Action = start_forward(Message),
         (
@@ -813,13 +804,11 @@ thread_pager_loop(Screen, OnEntry, !Info, !IO) :-
             Config = !.Info ^ tp_config,
             Crypto = !.Info ^ tp_crypto,
             start_forward(Config, Crypto, Screen, Message, Transition, !IO),
-            handle_screen_transition(Screen, NewScreen, Transition, _Sent,
-                !Info, !IO)
+            handle_screen_transition(Screen, Transition, _Sent, !Info, !IO)
         ;
-            Message = excluded_message(_, _, _, _, _),
-            NewScreen = Screen
+            Message = excluded_message(_, _, _, _, _)
         ),
-        thread_pager_loop(NewScreen, redraw, !Info, !IO)
+        thread_pager_loop(Screen, redraw, !Info, !IO)
     ;
         Action = prompt_resend(MessageId),
         flush_async_with_progress(Screen, !IO),
@@ -829,29 +818,29 @@ thread_pager_loop(Screen, OnEntry, !Info, !IO) :-
         Action = start_recall,
         flush_async_with_progress(Screen, !IO),
         ThreadId = !.Info ^ tp_thread_id,
-        handle_recall(Screen, NewScreen, ThreadId, Sent, !Info, !IO),
+        handle_recall(Screen, ThreadId, Sent, !Info, !IO),
         (
             Sent = sent,
             AddedMessages0 = !.Info ^ tp_added_messages,
             !Info ^ tp_added_messages := AddedMessages0 + 1,
-            reopen_thread_pager(NewScreen, no, !Info, !IO)
+            reopen_thread_pager(Screen, no, !Info, !IO)
         ;
             Sent = not_sent
         ),
-        thread_pager_loop(NewScreen, redraw, !Info, !IO)
+        thread_pager_loop(Screen, redraw, !Info, !IO)
     ;
         Action = edit_as_template(Message),
         flush_async_with_progress(Screen, !IO),
-        handle_edit_as_template(Screen, NewScreen, Message, Sent, !Info, !IO),
+        handle_edit_as_template(Screen, Message, Sent, !Info, !IO),
         (
             Sent = sent,
             AddedMessages0 = !.Info ^ tp_added_messages,
             !Info ^ tp_added_messages := AddedMessages0 + 1,
-            reopen_thread_pager(NewScreen, no, !Info, !IO)
+            reopen_thread_pager(Screen, no, !Info, !IO)
         ;
             Sent = not_sent
         ),
-        thread_pager_loop(NewScreen, redraw, !Info, !IO)
+        thread_pager_loop(Screen, redraw, !Info, !IO)
     ;
         Action = prompt_tag(Initial),
         prompt_tag(Screen, Initial, !Info, !IO),
@@ -933,7 +922,7 @@ thread_pager_input(Key, Action, MessageUpdate, !Info) :-
     NumPagerRows = !.Info ^ tp_num_pager_rows,
     (
         ( Key = char('j')
-        ; Key = code(key_down)
+        ; Key = code(curs.key_down)
         )
     ->
         next_message(MessageUpdate, !Info),
@@ -946,7 +935,7 @@ thread_pager_input(Key, Action, MessageUpdate, !Info) :-
         Action = continue
     ;
         ( Key = char('k')
-        ; Key = code(key_up)
+        ; Key = code(curs.key_up)
         )
     ->
         prev_message(MessageUpdate, !Info),
@@ -981,7 +970,7 @@ thread_pager_input(Key, Action, MessageUpdate, !Info) :-
         Action = continue
     ;
         ( Key = char(' ')
-        ; Key = code(key_pagedown)
+        ; Key = code(curs.key_pagedown)
         )
     ->
         Delta = int.max(0, NumPagerRows - 1),
@@ -989,14 +978,14 @@ thread_pager_input(Key, Action, MessageUpdate, !Info) :-
         Action = continue
     ;
         ( Key = char('b')
-        ; Key = code(key_pageup)
+        ; Key = code(curs.key_pageup)
         )
     ->
         Delta = int.max(0, NumPagerRows - 1),
         scroll_but_stop_at_message(-Delta, MessageUpdate, !Info),
         Action = continue
     ;
-        ( Key = code(key_home)
+        ( Key = code(curs.key_home)
         ; Key = char('g')
         )
     ->
@@ -1004,7 +993,7 @@ thread_pager_input(Key, Action, MessageUpdate, !Info) :-
         MessageUpdate = clear_message,
         Action = continue
     ;
-        ( Key = code(key_end)
+        ( Key = code(curs.key_end)
         ; Key = char('G')
         )
     ->
@@ -1214,7 +1203,7 @@ thread_pager_input(Key, Action, MessageUpdate, !Info) :-
         Action = pipe_ids,
         MessageUpdate = no_change
     ;
-        ( Key = code(key_resize) ->
+        ( Key = code(curs.key_resize) ->
             Action = resize
         ; Key = timeout_or_error ->
             Action = continue_no_draw
@@ -2484,7 +2473,7 @@ do_decrypt_part(Screen, MessageId, PartId, MessageUpdate, !Info, !IO) :-
         ),
         Pager0 = !.Info ^ tp_pager,
         NumRows = !.Info ^ tp_num_pager_rows,
-        get_cols(Screen, Cols),
+        get_cols(Screen, Cols, !IO),
         replace_node_under_cursor(Config, NumRows, Cols, Part, Pager0, Pager,
             !IO),
         !Info ^ tp_pager := Pager
@@ -2550,7 +2539,7 @@ do_verify_part(Screen, Part0, MessageUpdate, !Info, !IO) :-
 
                 Pager0 = !.Info ^ tp_pager,
                 NumRows = !.Info ^ tp_num_pager_rows,
-                get_cols(Screen, Cols),
+                get_cols(Screen, Cols, !IO),
                 % Regenerating the part tree is overkill...
                 replace_node_under_cursor(Config, NumRows, Cols, Part,
                     Pager0, Pager, !IO),
@@ -2621,7 +2610,7 @@ good_signature(Signature) :-
 toggle_content(Screen, ToggleType, !Info, !IO) :-
     Config = !.Info ^ tp_config,
     NumRows = !.Info ^ tp_num_pager_rows,
-    get_cols(Screen, Cols),
+    get_cols(Screen, Cols, !IO),
     Pager0 = !.Info ^ tp_pager,
     pager.toggle_content(Config, ToggleType, NumRows, Cols, MessageUpdate,
         Pager0, Pager, !IO),
@@ -2774,21 +2763,21 @@ handle_resend(Screen, MessageId, !Info, !IO) :-
 
 %-----------------------------------------------------------------------------%
 
-:- pred handle_recall(screen::in, screen::out, thread_id::in, sent::out,
+:- pred handle_recall(screen::in, thread_id::in, sent::out,
     thread_pager_info::in, thread_pager_info::out, io::di, io::uo) is det.
 
-handle_recall(!Screen, ThreadId, Sent, !Info, !IO) :-
+handle_recall(Screen, ThreadId, Sent, !Info, !IO) :-
     Config = !.Info ^ tp_config,
     Crypto = !.Info ^ tp_crypto,
-    select_recall(Config, !.Screen, yes(ThreadId), TransitionA, !IO),
-    handle_screen_transition(!Screen, TransitionA, MaybeSelected, !Info, !IO),
+    select_recall(Config, Screen, yes(ThreadId), TransitionA, !IO),
+    handle_screen_transition(Screen, TransitionA, MaybeSelected, !Info, !IO),
     (
         MaybeSelected = yes(Message),
         (
             Message = message(_, _, _, _, _, _),
-            continue_from_message(Config, Crypto, !.Screen, postponed_message,
+            continue_from_message(Config, Crypto, Screen, postponed_message,
                 Message, TransitionB, !IO),
-            handle_screen_transition(!Screen, TransitionB, Sent, !Info, !IO)
+            handle_screen_transition(Screen, TransitionB, Sent, !Info, !IO)
         ;
             Message = excluded_message(_, _, _, _, _),
             Sent = not_sent
@@ -2813,18 +2802,17 @@ edit_as_template(Info, Action, MessageUpdate) :-
         Action = continue
     ).
 
-:- pred handle_edit_as_template(screen::in, screen::out, message::in,
-    sent::out, thread_pager_info::in, thread_pager_info::out, io::di, io::uo)
-    is det.
+:- pred handle_edit_as_template(screen::in, message::in, sent::out,
+    thread_pager_info::in, thread_pager_info::out, io::di, io::uo) is det.
 
-handle_edit_as_template(!Screen, Message, Sent, !Info, !IO) :-
+handle_edit_as_template(Screen, Message, Sent, !Info, !IO) :-
     Config = !.Info ^ tp_config,
     Crypto = !.Info ^ tp_crypto,
     (
         Message = message(_, _, _, _, _, _),
-        continue_from_message(Config, Crypto, !.Screen, arbitrary_message,
+        continue_from_message(Config, Crypto, Screen, arbitrary_message,
             Message, Transition, !IO),
-        handle_screen_transition(!Screen, Transition, Sent, !Info, !IO)
+        handle_screen_transition(Screen, Transition, Sent, !Info, !IO)
     ;
         Message = excluded_message(_, _, _, _, _),
         Sent = not_sent
@@ -3008,7 +2996,7 @@ handle_poll_result(Screen, CountOutput, !Info, !IO) :-
 
             % Redraw the bar immediately.
             draw_thread_pager_bar(Screen, !.Info, !IO),
-            panel.update_panels(!IO),
+            update_panels(Screen, !IO),
 
             % Run notify command if any.
             ( if ThreadCount > 0 ; IndexCount > 0 then
@@ -3050,30 +3038,32 @@ draw_thread_pager(Screen, Info, !IO) :-
     Attrs = thread_attrs(Config),
     PagerAttrs = pager_attrs(Config),
 
-    split_panels(Screen, Info, ThreadPanels, SepPanel, PagerPanels),
-    scrollable.draw(draw_thread_line(Attrs), ThreadPanels, Scrollable, !IO),
-    get_cols(Screen, Cols),
-    draw_sep(Attrs, Cols, SepPanel, !IO),
-    draw_pager_lines(PagerAttrs, PagerPanels, PagerInfo, !IO),
+    get_main_panels(Screen, MainPanels, !IO),
+    split_panels(Info, MainPanels, ThreadPanels, SepPanel, PagerPanels),
+    scrollable.draw(draw_thread_line(Attrs), Screen, ThreadPanels, Scrollable,
+        !IO),
+    get_cols(Screen, Cols, !IO),
+    draw_sep(Screen, SepPanel, Attrs, Cols, !IO),
+    draw_pager_lines(Screen, PagerPanels, PagerAttrs, PagerInfo, !IO),
     draw_thread_pager_bar(Screen, Info, !IO).
 
-:- pred draw_sep(thread_attrs::in, int::in, maybe(panel)::in, io::di, io::uo)
-    is det.
+:- pred draw_sep(screen::in, maybe(vpanel)::in, thread_attrs::in, int::in,
+    io::di, io::uo) is det.
 
-draw_sep(Attrs, Cols, MaybeSepPanel, !IO) :-
+draw_sep(Screen, MaybeSepPanel, Attrs, Cols, !IO) :-
     (
         MaybeSepPanel = yes(Panel),
-        panel.erase(Panel, !IO),
-        attr(Panel, Attrs ^ t_status ^ bar, !IO),
-        hline(Panel, char.to_int('-'), Cols, !IO)
+        erase(Screen, Panel, !IO),
+        attr(Screen, Panel, Attrs ^ t_status ^ bar, !IO),
+        hline(Screen, Panel, '-', Cols, !IO)
     ;
         MaybeSepPanel = no
     ).
 
-:- pred draw_thread_line(thread_attrs::in, panel::in, thread_line::in, int::in,
-    bool::in, io::di, io::uo) is det.
+:- pred draw_thread_line(thread_attrs::in, screen::in, vpanel::in,
+    thread_line::in, int::in, bool::in, io::di, io::uo) is det.
 
-draw_thread_line(TAttrs, Panel, Line, _LineNr, IsCursor, !IO) :-
+draw_thread_line(TAttrs, Screen, Panel, Line, _LineNr, IsCursor, !IO) :-
     Line = thread_line(Message, _ParentId, From, _PrevTags, CurrTags, StdTags,
         NonstdTagsWidth, Selected, MaybeGraphics, RelDate, MaybeSubject),
     Attrs = TAttrs ^ t_generic,
@@ -3084,128 +3074,125 @@ draw_thread_line(TAttrs, Panel, Line, _LineNr, IsCursor, !IO) :-
         IsCursor = no,
         RelDateAttr = Attrs ^ relative_date
     ),
-    draw_fixed(Panel, RelDateAttr, 13, RelDate, ' ', !IO),
+    draw_fixed(Screen, Panel, RelDateAttr, 13, RelDate, ' ', !IO),
 
     (
         Selected = selected,
-        mattr_draw(Panel, unless(IsCursor, Attrs ^ selected), "*", !IO)
+        mattr_draw(Screen, Panel, unless(IsCursor, Attrs ^ selected), "*", !IO)
     ;
         Selected = not_selected,
-        draw(Panel, " ", !IO)
+        draw(Screen, Panel, " ", !IO)
     ),
-    mattr(Panel, unless(IsCursor, Attrs ^ standard_tag), !IO),
+    mattr(Screen, Panel, unless(IsCursor, Attrs ^ standard_tag), !IO),
 
     StdTags = standard_tags(Unread, Replied, Deleted, Flagged, Inboxed),
     (
         Unread = unread,
-        draw(Panel, "n", !IO)
+        draw(Screen, Panel, "n", !IO)
     ;
         Unread = read,
-        draw(Panel, " ", !IO)
+        draw(Screen, Panel, " ", !IO)
     ),
     (
         Replied = replied,
-        draw(Panel, "r", !IO)
+        draw(Screen, Panel, "r", !IO)
     ;
         Replied = not_replied,
-        draw(Panel, " ", !IO)
+        draw(Screen, Panel, " ", !IO)
     ),
     (
         Deleted = deleted,
-        draw(Panel, "d", !IO)
+        draw(Screen, Panel, "d", !IO)
     ;
         Deleted = not_deleted,
-        draw(Panel, " ", !IO)
+        draw(Screen, Panel, " ", !IO)
     ),
     (
         Inboxed = inboxed,
-        draw(Panel, "i", !IO)
+        draw(Screen, Panel, "i", !IO)
     ;
         Inboxed = not_inboxed,
-        draw(Panel, " ", !IO)
+        draw(Screen, Panel, " ", !IO)
     ),
     (
         Flagged = flagged,
-        mattr_draw(Panel, unless(IsCursor, Attrs ^ flagged), "! ", !IO)
+        mattr_draw(Screen, Panel, unless(IsCursor, Attrs ^ flagged), "! ", !IO)
     ;
         Flagged = unflagged,
-        draw(Panel, "  ", !IO)
+        draw(Screen, Panel, "  ", !IO)
     ),
 
-    mattr(Panel, unless(IsCursor, TAttrs ^ t_tree), !IO),
+    mattr(Screen, Panel, unless(IsCursor, TAttrs ^ t_tree), !IO),
     (
         MaybeGraphics = yes(Graphics),
-        list.foldl(draw_graphic(Panel), Graphics, !IO)
+        list.foldl(draw_graphic(Screen, Panel), Graphics, !IO)
     ;
         MaybeGraphics = no
     ),
-    draw(Panel, "• ", !IO),
+    draw(Screen, Panel, "• ", !IO),
 
     (
         Message = message(_, _, _, _, _, _)
     ;
         Message = excluded_message(_, _, _, _, _),
-        draw(Panel, "(excluded) ", !IO)
+        draw(Screen, Panel, "(excluded) ", !IO)
     ),
 
+    getyx(Screen, Panel, Row, FromStartX, !IO),
     (
         Unread = unread,
-        Highlight = bold
+        Highlight = curs.bold
     ;
         Unread = read,
-        Highlight = normal
+        Highlight = curs.normal
     ),
-    mattr_draw(Panel, unless(IsCursor, Attrs ^ author + Highlight), From,
-        !IO),
-
+    mattr_draw(Screen, Panel,
+        unless(IsCursor, curs.(Attrs ^ author + Highlight)),
+        From, !IO),
     (
         MaybeSubject = yes(Subject),
-        draw(Panel, ". ", !IO),
-        panel.getyx(Panel, Row, SubjectX0, !IO),
-        mattr_draw(Panel, unless(IsCursor, Attrs ^ subject),
-            header_value_string(Subject), !IO),
-        panel.getyx(Panel, _, SubjectX, !IO),
-        panel.getmaxyx(Panel, _, MaxX, !IO)
+        draw(Screen, Panel, ". ", !IO),
+        mattr_draw(Screen, Panel, unless(IsCursor, Attrs ^ subject),
+            header_value_string(Subject), !IO)
     ;
-        MaybeSubject = no,
-        panel.getmaxyx(Panel, Row, MaxX, !IO),
-        SubjectX0 = MaxX,
-        SubjectX = MaxX
+        MaybeSubject = no
     ),
+    getyx(Screen, Panel, _, SubjectEndX, !IO),
+    getmaxyx(Screen, Panel, _, MaxX, !IO),
 
-    % Draw non-standard tags, overlapping up to half of the subject.
+    % Draw non-standard tags, overlapping from/subject text if necessary.
     ( NonstdTagsWidth > 0 ->
         (
-            MaybeSubject = yes(_),
-            MaxX - SubjectX < NonstdTagsWidth,
-            SubjectMidX = (MaxX + SubjectX0)/2,
-            MoveX = max(SubjectMidX, MaxX - NonstdTagsWidth),
-            MoveX < SubjectX
+            NonstdTagsWidth > MaxX - SubjectEndX,
+            MoveX = max(FromStartX, MaxX - NonstdTagsWidth),
+            MoveX < SubjectEndX
         ->
-            panel.move(Panel, Row, MoveX, !IO)
+            move(Screen, Panel, Row, MoveX, !IO)
         ;
             true
         ),
-        attr_set(Panel, Attrs ^ other_tag, !IO),
-        set.fold(draw_display_tag(Panel), CurrTags, !IO)
+        attr(Screen, Panel, Attrs ^ other_tag, !IO),
+        set.fold(draw_display_tag(Screen, Panel), CurrTags, !IO)
     ;
         true
     ).
 
-:- pred draw_display_tag(panel::in, tag::in, io::di, io::uo) is det.
+:- pred draw_display_tag(screen::in, vpanel::in, tag::in, io::di, io::uo)
+    is det.
 
-draw_display_tag(Panel, Tag, !IO) :-
+draw_display_tag(Screen, Panel, Tag, !IO) :-
     ( display_tag(Tag) ->
         display_tag_string(Tag, S),
-        draw2(Panel, " ", S, !IO)
+        draw2(Screen, Panel, " ", S, !IO)
     ;
         true
     ).
 
-:- pred draw_graphic(panel::in, graphic::in, io::di, io::uo) is det.
+:- pred draw_graphic(screen::in, vpanel::in, graphic::in, io::di, io::uo)
+    is det.
 
-draw_graphic(Panel, Graphic, !IO) :-
-    draw(Panel, graphic_to_char(Graphic), !IO).
+draw_graphic(Screen, Panel, Graphic, !IO) :-
+    draw(Screen, Panel, graphic_to_char(Graphic), !IO).
 
 :- func graphic_to_char(graphic) = string.
 
@@ -3214,7 +3201,7 @@ graphic_to_char(vert) = "│".
 graphic_to_char(tee) = "├".
 graphic_to_char(ell) = "└".
 
-:- func unless(bool, attr) = maybe(attr).
+:- func unless(bool, curs.attr) = maybe(curs.attr).
 
 unless(no, X) = yes(X).
 unless(yes, _) = no.
@@ -3259,14 +3246,13 @@ count_messages_since_refresh(ThreadCount, IndexCount) =
             [i(ThreadCount), i(IndexCount)])
     ).
 
-:- pred split_panels(screen::in, thread_pager_info::in,
-    list(panel)::out, maybe(panel)::out, list(panel)::out) is det.
+:- pred split_panels(thread_pager_info::in, list(vpanel)::in,
+    list(vpanel)::out, maybe(vpanel)::out, list(vpanel)::out) is det.
 
-split_panels(Screen, Info, ThreadPanels, MaybeSepPanel, PagerPanels) :-
+split_panels(Info, MainPanels, ThreadPanels, MaybeSepPanel, PagerPanels) :-
     NumThreadRows = Info ^ tp_num_thread_rows,
     NumPagerRows = Info ^ tp_num_pager_rows,
-    get_main_panels(Screen, Panels0),
-    list.split_upto(NumThreadRows, Panels0, ThreadPanels, Panels1),
+    list.split_upto(NumThreadRows, MainPanels, ThreadPanels, Panels1),
     (
         Panels1 = [SepPanel | Panels2],
         MaybeSepPanel = yes(SepPanel),
